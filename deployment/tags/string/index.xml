<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>String on Mryqu&#39;s Notes</title>
    <link>https://mryqu.github.io/tags/string/</link>
    <description>Recent content in String on Mryqu&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 26 Dec 2016 05:24:36 +0000</lastBuildDate>
    
	<atom:link href="https://mryqu.github.io/tags/string/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[C&#43;&#43;] 将JSON转成字符串</title>
      <link>https://mryqu.github.io/post/c&#43;&#43;_%E5%B0%86json%E8%BD%AC%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Mon, 26 Dec 2016 05:24:36 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/c&#43;&#43;_%E5%B0%86json%E8%BD%AC%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>需要将如下JSON字符串作为GoogleSheets API POST请求的消息体。打算使用JsonCpp实现。
{&amp;quot;majorDimension&amp;quot;:&amp;quot;ROWS&amp;quot;,&amp;quot;values&amp;quot;:[[&amp;quot;Name&amp;quot;,&amp;quot;Sex&amp;quot;,&amp;quot;Age&amp;quot;,&amp;quot;Height&amp;quot;,&amp;quot;Weight&amp;quot;],[&amp;quot;阿尔弗雷德&amp;quot;,&amp;quot;男&amp;quot;,&amp;quot;14&amp;quot;,&amp;quot;69&amp;quot;,&amp;quot;112.5&amp;quot;],[&amp;quot;爱丽丝&amp;quot;,&amp;quot;女&amp;quot;,&amp;quot;13&amp;quot;,&amp;quot;56.5&amp;quot;,&amp;quot;84&amp;quot;],[&amp;quot;芭芭拉&amp;quot;,&amp;quot;女&amp;quot;,&amp;quot;13&amp;quot;,&amp;quot;65.3&amp;quot;,&amp;quot;98&amp;quot;],[&amp;quot;凯露&amp;quot;,&amp;quot;女&amp;quot;,&amp;quot;14&amp;quot;,&amp;quot;62.8&amp;quot;,&amp;quot;102.5&amp;quot;],[&amp;quot;亨利&amp;quot;,&amp;quot;男&amp;quot;,&amp;quot;14&amp;quot;,&amp;quot;63.5&amp;quot;,&amp;quot;102.5&amp;quot;],[&amp;quot;詹姆斯&amp;quot;,&amp;quot;男&amp;quot;,&amp;quot;12&amp;quot;,&amp;quot;57.3&amp;quot;,&amp;quot;83&amp;quot;],[&amp;quot;简&amp;quot;,&amp;quot;女&amp;quot;,&amp;quot;12&amp;quot;,&amp;quot;59.8&amp;quot;,&amp;quot;84.5&amp;quot;],[&amp;quot;雅妮特&amp;quot;,&amp;quot;女&amp;quot;,&amp;quot;15&amp;quot;,&amp;quot;62.5&amp;quot;,&amp;quot;112.5&amp;quot;],[&amp;quot;杰弗瑞&amp;quot;,&amp;quot;男&amp;quot;,&amp;quot;13&amp;quot;,&amp;quot;62.5&amp;quot;,&amp;quot;84&amp;quot;],[&amp;quot;约翰&amp;quot;,&amp;quot;男&amp;quot;,&amp;quot;12&amp;quot;,&amp;quot;59&amp;quot;,&amp;quot;99.5&amp;quot;],[&amp;quot;乔伊斯&amp;quot;,&amp;quot;女&amp;quot;,&amp;quot;11&amp;quot;,&amp;quot;51.3&amp;quot;,&amp;quot;50.5&amp;quot;],[&amp;quot;茱迪&amp;quot;,&amp;quot;女&amp;quot;,&amp;quot;14&amp;quot;,&amp;quot;64.3&amp;quot;,&amp;quot;90&amp;quot;],[&amp;quot;罗伊斯&amp;quot;,&amp;quot;女&amp;quot;,&amp;quot;12&amp;quot;,&amp;quot;56.3&amp;quot;,&amp;quot;77&amp;quot;],[&amp;quot;玛丽&amp;quot;,&amp;quot;女&amp;quot;,&amp;quot;15&amp;quot;,&amp;quot;66.5&amp;quot;,&amp;quot;112&amp;quot;],[&amp;quot;菲利普&amp;quot;,&amp;quot;男&amp;quot;,&amp;quot;16&amp;quot;,&amp;quot;72&amp;quot;,&amp;quot;150&amp;quot;],[&amp;quot;罗伯特&amp;quot;,&amp;quot;男&amp;quot;,&amp;quot;12&amp;quot;,&amp;quot;64.8&amp;quot;,&amp;quot;128&amp;quot;],[&amp;quot;罗纳德&amp;quot;,&amp;quot;男&amp;quot;,&amp;quot;15&amp;quot;,&amp;quot;67&amp;quot;,&amp;quot;133&amp;quot;],[&amp;quot;托马斯&amp;quot;,&amp;quot;男&amp;quot;,&amp;quot;11&amp;quot;,&amp;quot;57.5&amp;quot;,&amp;quot;85&amp;quot;],[&amp;quot;威廉&amp;quot;,&amp;quot;男&amp;quot;,&amp;quot;15&amp;quot;,&amp;quot;66.5&amp;quot;,&amp;quot;112&amp;quot;]]}  最终代码：</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]获取推文生成的SAS时间</title>
      <link>https://mryqu.github.io/post/c&#43;&#43;_%E8%8E%B7%E5%8F%96%E6%8E%A8%E6%96%87%E7%94%9F%E6%88%90%E7%9A%84sas%E6%97%B6%E9%97%B4/</link>
      <pubDate>Fri, 19 Feb 2016 06:07:14 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/c&#43;&#43;_%E8%8E%B7%E5%8F%96%E6%8E%A8%E6%96%87%E7%94%9F%E6%88%90%E7%9A%84sas%E6%97%B6%E9%97%B4/</guid>
      <description>写了一个小代码分析推文生成时间字符串，将其解析成SAS时间。 简而言之，time_t存储的是距00:00:00, Jan 1, 1970 UTC的秒数（epoch），其中tm_year存储的是当前年数减去1900；而SAS时间起始点为00:00:00, Jan 1, 1960UTC；转换主要使用difftime获取两者的时间差。 代码如下：参考 C++: time_t
C++: time
C++: gmtime</description>
    </item>
    
    <item>
      <title>[C] 了解printf中的%.s</title>
      <link>https://mryqu.github.io/post/c_%E4%BA%86%E8%A7%A3printf/</link>
      <pubDate>Thu, 22 Jan 2015 20:59:59 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/c_%E4%BA%86%E8%A7%A3printf/</guid>
      <description>偶尔看到C代码printf(&amp;quot;%.*s&amp;quot;,dataL,data);，对printf中的格式化字符串&amp;rdquo;%.*s&amp;rdquo;有点不解。
查看了http://www.cplusplus.com/reference/cstdio/printf/文档后，有所理解。
| width |description |&amp;mdash;&amp;ndash; | (number) |Minimum number of characters to be printed. If the value tobe printed is shorter than this number, the result is padded withblank spaces. The value is not truncated even if the result islarger. | * |The width is not specified in the format string, but as an additional integer value argument preceding theargument that has to be formatted.
| .precision |description |&amp;mdash;&amp;ndash; | .</description>
    </item>
    
    <item>
      <title>[JavaScript] 字符串与JSON数据互转</title>
      <link>https://mryqu.github.io/post/javascript_%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8Ejson%E6%95%B0%E6%8D%AE%E4%BA%92%E8%BD%AC/</link>
      <pubDate>Tue, 26 Aug 2014 06:06:26 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/javascript_%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8Ejson%E6%95%B0%E6%8D%AE%E4%BA%92%E8%BD%AC/</guid>
      <description>字符串-&amp;gt;JSON 转换方法有3种:
使用浏览器内置window.JSON.parse方法 原生方法，速度最快，首选方案。老版本浏览器不支持。
|浏览器|支持版本 |&amp;mdash; |Chrome|(Yes) |Firefox (Gecko)|3.5 (1.9.1) |Internet Explorer|8.0 |Opera|10.5 |Safari|4.0 |Android|(Yes) |Chrome for Android|(Yes) |Firefox Mobile (Gecko)|1.0 (1.0) |IE Mobile|(Yes) ||Opera Mobile|(Yes) |Safari Mobile|(Yes)
使用Funtion()构造函数 较eval_r()快
使用 eval_r() 函数 功能强大，能解析任何JS代码,但是执行效率和安全性都不好示例代码：
var jsonStr = &#39;{&amp;quot;name&amp;quot;:&amp;quot;kxeg&amp;quot;,&amp;quot;data&amp;quot;:[{&amp;quot;key&amp;quot;:&amp;quot;Alpha&amp;quot;,&amp;quot;color&amp;quot;:&amp;quot;lightblue&amp;quot;},{&amp;quot;key&amp;quot;:&amp;quot;Beta&amp;quot;,&amp;quot;color&amp;quot;:&amp;quot;orange&amp;quot;}]}&#39;; //JSON.parse() if (window &amp;amp;&amp;amp; window.JSON &amp;amp;&amp;amp; window.JSON.parse) jsonObj1 = window.JSON.parse(jsonStr); //Function 创建一个闭包,返回一个json数据对象 jsonObj2 = (new Function(&#39;return&#39;+jsonStr))(); //eval_r() jsonObj3 = eval_r(&#39;(&#39;+jsonStr+&#39;)&#39;);  JSON-&amp;gt;字符串 使用浏览器内置window.JSON.stringify方法
参考 js中字符串数据转为json对象的方法
MDN：JSON</description>
    </item>
    
  </channel>
</rss>