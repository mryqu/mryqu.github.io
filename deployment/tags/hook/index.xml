<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hook on Mryqu&#39;s Notes</title>
    <link>https://mryqu.github.io/tags/hook/</link>
    <description>Recent content in Hook on Mryqu&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 13 Aug 2016 06:00:17 +0000</lastBuildDate>
    
	<atom:link href="https://mryqu.github.io/tags/hook/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[RabbitMQ] AutorecoveringConnection在连接恢复后才调用ShutdownListener</title>
      <link>https://mryqu.github.io/post/rabbitmq_autorecoveringconnection%E5%9C%A8%E8%BF%9E%E6%8E%A5%E6%81%A2%E5%A4%8D%E5%90%8E%E6%89%8D%E8%B0%83%E7%94%A8shutdownlistener/</link>
      <pubDate>Sat, 13 Aug 2016 06:00:17 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/rabbitmq_autorecoveringconnection%E5%9C%A8%E8%BF%9E%E6%8E%A5%E6%81%A2%E5%A4%8D%E5%90%8E%E6%89%8D%E8%B0%83%E7%94%A8shutdownlistener/</guid>
      <description>想玩一玩RabbitMQ中的ShutdownListener和RecoveryListener，又不想写自己的重连接逻辑，所以使用了ConnectionFactory类的setAutomaticRecoveryEnabled方法让其自动恢复连接。代码如下：
package com.yqu.rabbitmq; import com.rabbitmq.client.*; import java.io.IOException; public class AutoRecoveryRecv { private final static String QUEUE_NAME = &amp;quot;hello&amp;quot;; public static void main(String[] argv) throws Exception { try { ConnectionFactory factory = new ConnectionFactory(); factory.setHost(ConnectionFactoryConfiguration.HOST); factory.setUsername(ConnectionFactoryConfiguration.USERNAME); factory.setPassword(ConnectionFactoryConfiguration.PASSWORD); factory.setAutomaticRecoveryEnabled(true); factory.setNetworkRecoveryInterval(10000); Connection connection = factory.newConnection(); connection.addShutdownListener(new ShutdownListener() { @Override public void shutdownCompleted(ShutdownSignalException cause) { String hardError = &amp;quot;&amp;quot;; String applInit = &amp;quot;&amp;quot;; if (cause.isHardError()) { hardError = &amp;quot;connection&amp;quot;; } else { hardError = &amp;quot;channel&amp;quot;; } if (cause.</description>
    </item>
    
    <item>
      <title>安装Gerrit的commit-msg钩子</title>
      <link>https://mryqu.github.io/post/%E5%AE%89%E8%A3%85gerrit%E7%9A%84commit-msg%E9%92%A9%E5%AD%90/</link>
      <pubDate>Wed, 19 Aug 2015 05:34:23 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/%E5%AE%89%E8%A3%85gerrit%E7%9A%84commit-msg%E9%92%A9%E5%AD%90/</guid>
      <description>对Gerrit进行首次提交前需要安装commit-msg钩子，每次总忘，每次都总是搜邮件，还是记博客里方便些。
gitdir=$(git rev-parse --git-dir); scp -p -P 29418 [your username]@[your Gerrit review server]:hooks/commit-msg {gitdir}/hooks/  参考
Gerrit：commit-msg Hook
Gerrit工作流</description>
    </item>
    
  </channel>
</rss>