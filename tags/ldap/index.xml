<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ldap on Mryqu&#39;s Notes</title>
    <link>https://mryqu.github.io/tags/ldap/</link>
    <description>Recent content in Ldap on Mryqu&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 13 Aug 2018 10:25:53 +0000</lastBuildDate>
    
	<atom:link href="https://mryqu.github.io/tags/ldap/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Spring] LDAP用户验证笔记</title>
      <link>https://mryqu.github.io/post/spring_ldap%E7%94%A8%E6%88%B7%E9%AA%8C%E8%AF%81%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 13 Aug 2018 10:25:53 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/spring_ldap%E7%94%A8%E6%88%B7%E9%AA%8C%E8%AF%81%E7%AC%94%E8%AE%B0/</guid>
      <description>对Spring LDAP用户验证进行了学习，制作了时序图： LDAP身份验证的步骤为：
- 从客户端登录页面获得用户名和密码。
- 匿名或使用管理DN/密码绑定到LDAP服务器，通过登录用户名查询用户DN，如失败则报用户不存在。
- 使用用户DN和密码再次绑定到LDAP服务器，如果能成功绑定则验证成功，否则报用户密码错误。
参考 Spring Security Architecture
Spring Security Reference
Spring Security Project
GETTING STARTED: Authenticating a User with LDAP
GitHub: spring-guides/gs-authenticating-ldap</description>
    </item>
    
    <item>
      <title>[Spring Boot] Hello Spring LDAP</title>
      <link>https://mryqu.github.io/post/spring_boot_hello_spring_ldap/</link>
      <pubDate>Mon, 06 Jul 2015 06:20:32 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/spring_boot_hello_spring_ldap/</guid>
      <description>这个帖子设定了标题后，一直忙于其他事情，拖延了两个月终于能够结贴了。
部分示例代码 LdapConfiugration.java package com.yqu.ldap.odm; import com.yqu.ldap.odm.dao.*; import org.apache.commons.logging.Log; import org.apache.commons.logging.LogFactory; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.context.annotation.*; import org.springframework.core.env.Environment; import org.springframework.ldap.core.LdapTemplate; import org.springframework.ldap.core.support.LdapContextSource; import javax.annotation.PostConstruct; @Configuration @ComponentScan(basePackages={&amp;quot;com.yqu.ldap.odm&amp;quot;}) public class LdapConfiugration { @Autowired private Environment _environment; private static Log log = LogFactory.getLog(LdapConfiugration.class); @PostConstruct private void init() { log.debug(&amp;quot;environment: yqu.ldap.url:&amp;quot; + _environment.getProperty(&amp;quot;yqu.ldap.url&amp;quot;)); log.debug(&amp;quot;environment: yqu.ldap.userDN:&amp;quot; + _environment.getProperty(&amp;quot;yqu.ldap.userDN&amp;quot;)); log.debug(&amp;quot;environment: yqu.ldap.password:&amp;quot; + _environment.getProperty(&amp;quot;yqu.ldap.password&amp;quot;)); log.debug(&amp;quot;environment: yqu.ldap.base:&amp;quot; + _environment.getProperty(&amp;quot;yqu.ldap.base&amp;quot;)); } @Bean(name=&amp;quot;ldapContextSource&amp;quot;) public LdapContextSource ldapContextSource() { String url = _environment.</description>
    </item>
    
  </channel>
</rss>