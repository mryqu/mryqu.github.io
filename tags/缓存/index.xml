<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>缓存 on Mryqu's Notes</title><link>https://mryqu.github.io/tags/%E7%BC%93%E5%AD%98/</link><description>Recent content in 缓存 on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 16 Jun 2013 11:13:02 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/tags/%E7%BC%93%E5%AD%98/index.xml" rel="self" type="application/rss+xml"/><item><title>用GemFire做Hibernate二级缓存</title><link>https://mryqu.github.io/post/%E7%94%A8gemfire%E5%81%9Ahibernate%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98/</link><pubDate>Sun, 16 Jun 2013 11:13:02 +0000</pubDate><guid>https://mryqu.github.io/post/%E7%94%A8gemfire%E5%81%9Ahibernate%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98/</guid><description>打开二级缓存 &amp;lt;property name=&amp;#34;hibernate.cache.use_second_level_cache&amp;#34;&amp;gt;true&amp;lt;/property&amp;gt; 为查询缓存设置Cache Factory &amp;lt;property name=&amp;#34;hibernate.cache.region.factory_class&amp;#34;&amp;gt; com.gemstone.gemfire.modules.hibernate.GemFireRegionFactory &amp;lt;/property&amp;gt; 共享缓存模式 ENABLE_SELECTIVE|DISABLE_SELECTIVE|ALL|NONE ENABLE_SELECTIVE (默认值及推荐值): 仅标注为可缓存的实体会被缓存。 DISABLE_SELECTIVE: 仅标注为不可缓存的实体才不会被缓存。 ALL: 即使实体标为不可缓存也会被缓存。 NONE: 即使实体标为可缓存也不会被缓存。该选项意味着完全禁止二级缓存。
GemFire相关配置 设置GemFire缓存属性
&amp;lt;property name=&amp;#34;gemfire.PROPERTY_NAME&amp;#34;&amp;gt;PROPERTY_VALUE&amp;lt;/property&amp;gt; 设置GemFire缓存默认region类型
&amp;lt;property name=&amp;#34;gemfire.default-region-attributes-id&amp;#34;&amp;gt; REGION_ATTRIBUTE &amp;lt;/property&amp;gt; REGION_ATTRIBUTE是预定义region类型快捷定义中的任一个。默认为REPLICATE_HEAP_LRU。其他有效region快捷定义包括:REPLICATE、 REPLICATE_PERSISTENT、 PARTITION、 PARTITION_PERSISTENT、PARTITION_REDUNDANT、 PARTITION_REDUNDANT_PERSISTENT。
设置特定GemFire缓存region属性
&amp;lt;property name=&amp;#34;gemfire.region-attributes-for: com.foo.Bar&amp;#34;&amp;gt; REGION_ATTRIBUTE &amp;lt;/property&amp;gt; 缓存映射 @Cache ( CacheConcurrencyStrategy usage(); String region() default &amp;#34;&amp;#34;; String include() default &amp;#34;all&amp;#34;; ) usage: 缓存并发策略(NONE, READ_ONLY, NONSTRICT_READ_WRITE, READ_WRITE,TRANSACTIONAL) region (可选项，默认为实体类的全类名或集合的全类名加属性名):缓存region名 include (选项项，默认为all): all则缓存所有实体属性，non-lazy仅缓存非懒惰加载的实体属性。
对缓存实体使用注释 @Entity @Cacheable @Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE) public class Forest { .</description></item><item><title>Hibernate缓存</title><link>https://mryqu.github.io/post/hibernate%E7%BC%93%E5%AD%98/</link><pubDate>Sat, 25 May 2013 09:40:06 +0000</pubDate><guid>https://mryqu.github.io/post/hibernate%E7%BC%93%E5%AD%98/</guid><description>Hibernate缓存 Hibernate带有三种不同缓存机制：一级缓存、二级缓存和查询缓存。
SessionFactory和Session SessionFactory(在JEE中叫做EntityManager)的用途是创建会话，初始化JDBC链接并（使用例如C3P0之类的可插拔provider）进行池化。SessionFactory是非可变的，通过hibernate.cfg.cml文件或Springbean配置中提供的匹配信息、缓存信息等配置进行创建。会话是最低级的工作单元，对应一个数据库事物。当会话创建后并对Hibernate实体机型一些操作，比如设置实体的一个属性，Hibernate不会立即更新底层数据库表。相反Hibernate记录实体的状态（是否为脏数据），并在会话最终刷新更新到数据库。这就是Hibernate所谓的一级缓存。
一级缓存 一级缓存是Hibernate记录正在进行的会话加载和接触的实体有可能的脏数据状态。正在进行的会话代表工作单元，始终使用，无法关闭。一级缓存的用途是隐藏对数据库许多SQL查询或更新，并在会话最终批量一起执行。当想起一级缓存的时候就应该想到会话。
二级缓存 二级缓存是进程范围内的缓存，与一个SessionFactory绑定。二级缓存可被相同（通常一个应用程序仅一个）SessionFactory的所有会话共享。默认二级缓存没有使能。二级缓存不存储任何实体实例，而是存储“脱水”状态，即字符串或整形数组代表实体的属性，一个实体id指向“脱水”的实体。概念上可以认为它是一个映射，id作为键，数组作为值。或像下面用于缓存region的这些东西：
public class Person { private Person parent; private Set&amp;lt;Person&amp;gt; children; public void setParent(Person p) { parent = p; } public void setChildren(Set&amp;lt;Person&amp;gt; set) { children = set; } public Set&amp;lt;Person&amp;gt; getChildren() { return children; } public Person getParent() { return parent; } } Hibernate映射配置如下:
&amp;lt;class name=&amp;#34;org.javalobby.tnt.hibernate.Person&amp;#34;&amp;gt; &amp;lt;cache usage=&amp;#34;read-write&amp;#34;/&amp;gt; &amp;lt;id name=&amp;#34;id&amp;#34; column=&amp;#34;id&amp;#34; type=&amp;#34;long&amp;#34;&amp;gt; &amp;lt;generator class=&amp;#34;identity&amp;#34;/&amp;gt; &amp;lt;/id&amp;gt; &amp;lt;property name=&amp;#34;firstName&amp;#34; type=&amp;#34;string&amp;#34;/&amp;gt; &amp;lt;property name=&amp;#34;middleInitial&amp;#34; type=&amp;#34;string&amp;#34;/&amp;gt; &amp;lt;property name=&amp;#34;lastName&amp;#34; type=&amp;#34;string&amp;#34;/&amp;gt; &amp;lt;many-to-one name=&amp;#34;parent&amp;#34; column=&amp;#34;parent_id&amp;#34; class=&amp;#34;Person&amp;#34;/&amp;gt; &amp;lt;set name=&amp;#34;children&amp;#34;&amp;gt; &amp;lt;key column=&amp;#34;parent_id&amp;#34;/&amp;gt; &amp;lt;one-to-many class=&amp;#34;Person&amp;#34;/&amp;gt; &amp;lt;/set&amp;gt; &amp;lt;/class&amp;gt; Hibernate概念上为此类持有如下记录:</description></item></channel></rss>