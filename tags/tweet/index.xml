<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tweet on Mryqu&#39;s Notes</title>
    <link>https://mryqu.github.io/tags/tweet/</link>
    <description>Recent content in Tweet on Mryqu&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 08 Feb 2018 13:55:35 +0000</lastBuildDate>
    
	<atom:link href="https://mryqu.github.io/tags/tweet/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>安装Twurl并调试extended tweet mode</title>
      <link>https://mryqu.github.io/post/%E4%BD%BF%E7%94%A8twurl%E8%B0%83%E8%AF%95extended_tweet_mode/</link>
      <pubDate>Thu, 08 Feb 2018 13:55:35 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/%E4%BD%BF%E7%94%A8twurl%E8%B0%83%E8%AF%95extended_tweet_mode/</guid>
      <description>在研究tweet字节限制由140字节变为280字节时，想要玩一玩Twitter API控制台工具(https://dev.twitter.com/rest/tools/console)，结果dev.twitter.com跳到了developer.twitter.com，这才发现Twitter REST API按照Standard、Premium和Enterprise划分开始走上收费的道路。 Twitter API控制台工具已经找不到了，官方示例使用twurl命令工具完成的。
安装Twurl  在https://rubyinstaller.org/下载并安装RubyInstaller 执行gem install twurl  调试extended tweet mode 准备环境 认证 twurl authorize --consumer-key key --consumer-secret secret  搜索tweet twurl &amp;quot;/1.1/search/tweets.json?q=scnydq&amp;quot; { &amp;quot;statuses&amp;quot;: [ { &amp;quot;created_at&amp;quot;: &amp;quot;Thu Feb 08 02:22:11 +0000 2018&amp;quot;, &amp;quot;id&amp;quot;: 9.6142489253621e+17, &amp;quot;id_str&amp;quot;: &amp;quot;961424892536205313&amp;quot;, &amp;quot;text&amp;quot;: &amp;quot;scnydq.testbody280:001002003004005006007008009010011012013014015016017018019020021022023024025026027028029030031032\u2026 https:\/\/t.co\/q9CyeceQku&amp;quot;, &amp;quot;truncated&amp;quot;: true, &amp;quot;entities&amp;quot;: { &amp;quot;hashtags&amp;quot;: [ ], &amp;quot;symbols&amp;quot;: [ ], &amp;quot;user_mentions&amp;quot;: [ ], &amp;quot;urls&amp;quot;: [ { &amp;quot;url&amp;quot;: &amp;quot;https:\/\/t.co\/q9CyeceQku&amp;quot;, &amp;quot;expanded_url&amp;quot;: &amp;quot;https:\/\/twitter.com\/i\/web\/status\/961424892536205313&amp;quot;, &amp;quot;display_url&amp;quot;: &amp;quot;twitter.com\/i\/web\/status\/9\u2026&amp;quot;, &amp;quot;indices&amp;quot;: [ 117, 140 ] } ] }, &amp;quot;metadata&amp;quot;: { &amp;quot;iso_language_code&amp;quot;: &amp;quot;en&amp;quot;, &amp;quot;result_type&amp;quot;: &amp;quot;recent&amp;quot; }, &amp;quot;source&amp;quot;: &amp;quot;&amp;lt;a href=\&amp;quot;http:\/\/twitter.</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]获取推文生成的SAS时间</title>
      <link>https://mryqu.github.io/post/c&#43;&#43;_%E8%8E%B7%E5%8F%96%E6%8E%A8%E6%96%87%E7%94%9F%E6%88%90%E7%9A%84sas%E6%97%B6%E9%97%B4/</link>
      <pubDate>Fri, 19 Feb 2016 06:07:14 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/c&#43;&#43;_%E8%8E%B7%E5%8F%96%E6%8E%A8%E6%96%87%E7%94%9F%E6%88%90%E7%9A%84sas%E6%97%B6%E9%97%B4/</guid>
      <description>写了一个小代码分析推文生成时间字符串，将其解析成SAS时间。 简而言之，time_t存储的是距00:00:00, Jan 1, 1970 UTC的秒数（epoch），其中tm_year存储的是当前年数减去1900；而SAS时间起始点为00:00:00, Jan 1, 1960UTC；转换主要使用difftime获取两者的时间差。 代码如下：参考 C++: time_t
C++: time
C++: gmtime</description>
    </item>
    
  </channel>
</rss>