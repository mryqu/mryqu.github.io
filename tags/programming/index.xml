<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Mryqu&#39;s Notes</title>
    <link>https://mryqu.github.io/tags/programming/</link>
    <description>Recent content in Programming on Mryqu&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 25 Aug 2015 05:58:04 +0000</lastBuildDate>
    
	<atom:link href="https://mryqu.github.io/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SAS过程步支持的第三方编程语言</title>
      <link>https://mryqu.github.io/post/sas%E8%BF%87%E7%A8%8B%E6%AD%A5%E6%94%AF%E6%8C%81%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</link>
      <pubDate>Tue, 25 Aug 2015 05:58:04 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/sas%E8%BF%87%E7%A8%8B%E6%AD%A5%E6%94%AF%E6%8C%81%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</guid>
      <description>编程语言接口描述C, C++PROC PROTOPROC PROTO可以以批处理模式注册以外部的C或C++程序。当C函数在PROC PROTO注册后，他们能被FCMP过程里声明的任何SAS函数或子程序调用, 也能被COMPILE过程里声明的任何SAS函数、子程序或方法块调用。PROC FCMPSAS函数编译器(FCMP)过程可以创建、测试和存储SAS函数和CALL子程序，这些SAS函数和CALL子程序之后可用于其它SAS过程步或数据步。PROC FCMP能够使用数据步语法创建存储在数据集内的SAS函数和CALL子程序。该过程步接受数据步语句的轻微变化，你可以使用PROC FCMP所创建的SAS函数和CALL子程序中SAS编程语言的大部分功能。GroovyPROC GROOVYPROC GROOVY是在SAS9.3引入，为特定Groovy内联代码提供提交快的SAS程序，也能运行存储在外部文件中的Groovy程序。 JavaJAVAOBJSAS9提供的数据步组件对象。示例： ``` data _null_; length s_out $200; declare JavaObj j1 (&#39;java/lang/String&#39;,&#39;KE&#39;); declare JavaObj j2 (&#39;java/lang/String&#39;,&#39;XIAO&#39;); j1.callStringMethod (&#39;concat&#39;, j2, s_out); put s_out=; j1.delete(); j2.delete(); run; ```  PROC JLAUNCHJLaunch过程步允许在SAS显示管理器系统（DMS）内启动Java GUI程序。示例： ``` proc jlaunch direct librefs debug app=&#39;com/sas/analytics/cmpfunceditor/app/FCmpFunctionEditorApp&#39;; picklist name=&#39;base/cmpedit.txt&#39;; run; ``` LuaPROC LUAPROC LUA是在SAS9.4引入，为特定Lua内联代码提供提交快的SAS程序，也能运行存储在外部文件中的Lua程序。RPROC IMLPROC IML提供了灵活的矩阵编程语言，可以与R集成。示例： ``` libname mmsamp &#34;!sasroot\mmcommon\sample&#34;; proc iml; run ExportDatasetToR(&#34;mmsamp.hmeq_train&#34; , &#34;mm_inds&#34;); submit /R; attach(mm_inds) # ----------------------------------------------- # FITTING THE LOGISTIC MODEL # ----------------------------------------------- logiten </description>
    </item>
    
  </channel>
</rss>