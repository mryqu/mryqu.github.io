<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Call_hierarchy on Mryqu&#39;s Notes</title>
    <link>https://mryqu.github.io/tags/call_hierarchy/</link>
    <description>Recent content in Call_hierarchy on Mryqu&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 11 Dec 2014 19:46:23 +0000</lastBuildDate>
    
	<atom:link href="https://mryqu.github.io/tags/call_hierarchy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[IntelliJ] 与Eclipse关于Call Hierarchy和Find Reference功能比较</title>
      <link>https://mryqu.github.io/post/intellij_%E4%B8%8Eeclipse%E5%85%B3%E4%BA%8Ecall_hierarchy%E5%92%8Cfind_reference%E5%8A%9F%E8%83%BD%E6%AF%94%E8%BE%83/</link>
      <pubDate>Thu, 11 Dec 2014 19:46:23 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/intellij_%E4%B8%8Eeclipse%E5%85%B3%E4%BA%8Ecall_hierarchy%E5%92%8Cfind_reference%E5%8A%9F%E8%83%BD%E6%AF%94%E8%BE%83/</guid>
      <description>&amp;ldquo;Call Hierarchy&amp;rdquo;功能比较 Eclipse的&amp;rdquo;CallHierarchy&amp;rdquo;可以查看一个Java方法或类成员变量的调用树（caller和callee两个方向）。 IntelliJ IDEA中可以在主菜单中选择Navigate | CallHierarchy命令查看一个Java方法调用树（caller和callee两个方向），但是不像Eclipse那样可以查看类成员变量的调用树。 IntelliJ IDEA中可以在主菜单中选择Analyze | Dataflow from/toHere两个命令查看表达式、变量和方法参数的传递关系树。 Eclipse的&amp;rdquo;Call Hierarchy&amp;rdquo;命令的功能，在IntelliJIDEA中被划分到了三个命令，增加了一点点记忆成本，不过IntelliJ IDEA中的处理范围更广，相对功能更强一些。
&amp;ldquo;Find Reference&amp;rdquo;功能比较 Eclipse的&amp;rdquo;Find Reference&amp;rdquo;可以查看一个Java类、方法或变量的直接使用情况。 IntelliJ IDEA的&amp;rdquo;Find Usage&amp;rdquo;具有相同的功能。在我的体验中，IntelliJIDEA中的功能更强一些，可以分析Sping配置文件中对Java类或方法的使用情况。
参考 https://www.jetbrains.com/idea/help/building-call-hierarchy.html
https://www.jetbrains.com/idea/help/analyzing-data-flow.html</description>
    </item>
    
  </channel>
</rss>