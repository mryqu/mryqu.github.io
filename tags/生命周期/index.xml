<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>生命周期 on Mryqu&#39;s Notes</title>
    <link>https://mryqu.github.io/tags/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</link>
    <description>Recent content in 生命周期 on Mryqu&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 16 Jul 2012 13:19:52 +0000</lastBuildDate>
    
	<atom:link href="https://mryqu.github.io/tags/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>FLEX组件的生命周期</title>
      <link>https://mryqu.github.io/post/flex%E7%BB%84%E4%BB%B6%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</link>
      <pubDate>Mon, 16 Jul 2012 13:19:52 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/flex%E7%BB%84%E4%BB%B6%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</guid>
      <description>组件实例化生命周期描述了用组件类创建组件对象时所发生的一系列步骤,作为生命周期的一部分,flex自动调用组件的的方法,发出事件,并使组件可见。 下面例子用as创建一个btn控件,并将其加入容器中
var boxContainer:Box = new Box(); //设置Box容器 ... //创建btn var b:Button = new Button(); b.label = &amp;quot;Submit&amp;quot;; ... //将btn添加到Box容器中 boxContainer.addChild(b);  下面的步骤显示了用代码创建一个Button控件，并将这个控件添加到Box容器中时所发生的一切： 1. 调用了组件的构造函数; var b:Button = new Button(); 2. 通过设置组件的属性对组件进行设置: //Configure the button control. b.label = &amp;rdquo;Submit&amp;rdquo;; 组件的setter方法将会调用invalidateProperties()、invalidateSize()、invalidateDisplayList()方法。 3. 调用addChild()方法将该组件添加到父组件。 //Add the Button control to the Box container. boxContainer.addChild(b); 4. 将component的parent的属性设置为对父容器的引用. 5. 计算组件样式(style)设置。 6. 在组件上发布priininialize事件。 7. 调用组件的createChildren()方法。 8. 调用invalidateProperties(),invalidateSize(),invalidateDisplayList()方法以触发后续到来的,下一个&amp;rdquo;渲染事件&amp;rdquo;(render event)期间对commitProperties(),measure(),updateDisplayList()方法的调用.这个规则唯一一个例外就是当用户设置组件的height和width属性时,Flex不会调用measure()方法。 9. 在组件上分发initialize事件。此时，组件所有的子组件都被初始化，但是组件没有改更size和处理布局。可以利用这个事件在组件布局之前执行一些附加的处理。 10. 在父容器上分发childAdd事件。 11. 在父容器上分发initialize事件。 12. 在下一个&amp;rdquo;渲染事件&amp;rdquo;(render event)中,Flex执行以下动作: - 调用组件的commitProperties()方法。 - 调用组件的measure()方法。 - 调用组件的layoutChrome方法。 - 调用组件的updateDisplayList()方法。 - 在组件上发布updateComplete事件。 13.</description>
    </item>
    
  </channel>
</rss>