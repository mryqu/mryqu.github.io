<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Filenamefilter on Mryqu&#39;s Notes</title>
    <link>https://mryqu.github.io/tags/filenamefilter/</link>
    <description>Recent content in Filenamefilter on Mryqu&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 18 Oct 2013 19:26:35 +0000</lastBuildDate>
    
	<atom:link href="https://mryqu.github.io/tags/filenamefilter/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>FilenameFilter和FileFilter介绍</title>
      <link>https://mryqu.github.io/post/filenamefilter%E5%92%8Cfilefilter%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Fri, 18 Oct 2013 19:26:35 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/filenamefilter%E5%92%8Cfilefilter%E4%BB%8B%E7%BB%8D/</guid>
      <description>FilenameFilter和FileFilter说明 java.io.File类提供了四个方法用于列举某个路径下的文件和目录，但不会递归列举子目录下的内容。其中两个是列举路径下的所有文件和目录。 - String[] list() - File[] listFiles()另外两个是列举路径满足指定过滤器的文件和目录。 - String[] list(FilenameFilter filter) - File[] listFiles(FileFilter filter)
示例 要求：返回当前目录下所有以yqu开头且以.tmp结尾的文件和目录。
代码 package com.yqu.file; import java.io.File; import java.io.FileFilter; import java.io.FilenameFilter; public class HelloFileListing { public static void main(String[] args) { File f = new File(&amp;quot;c:/test&amp;quot;); System.out.println(&amp;quot;\n====Method listFiles() example====&amp;quot;); File[] files = f.listFiles(); for (File fl : files) { String type = fl.isFile() ? &amp;quot;File: &amp;quot; : &amp;quot;Directory: &amp;quot;; try { System.out.println(type + fl.</description>
    </item>
    
  </channel>
</rss>