<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>eventbus on Mryqu's Notes</title><link>https://mryqu.github.io/tags/eventbus/</link><description>Recent content in eventbus on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 09 Jan 2015 12:11:23 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/tags/eventbus/index.xml" rel="self" type="application/rss+xml"/><item><title>[OpenUI5] MVC和EventBus示例</title><link>https://mryqu.github.io/post/openui5_mvc%E5%92%8Ceventbus%E7%A4%BA%E4%BE%8B/</link><pubDate>Fri, 09 Jan 2015 12:11:23 +0000</pubDate><guid>https://mryqu.github.io/post/openui5_mvc%E5%92%8Ceventbus%E7%A4%BA%E4%BE%8B/</guid><description>昨天发了一个帖子[OpenUI5] MVC：访问其他View/Controller的方法，里面的示例是用违反MVC原则的方式演示一下效果，今天又在jsbin上做了个OpenUI5MVC &amp;amp; EventBus示例：http://jsbin.com/nixomo/1/edit?html,output。 sap.ui.core.EventBus使用起来很简单。
通过var bus = sap.ui.getCore().getEventBus() 获得消息总线 接收方首先在某个消息通道上订阅消息时间并注册消息监听器listener 发送方在这个消息通道上发布消息，接收方就会去处理 通过阅读代码可知，EventBus一个实例对应一个消息通道，EventBus的_defaultChannel和_mChannels都是sap.ui.base.EventProvider实例，用于事件注册与分发、将数据与事件的绑定/解绑。上图中就是消息通道&amp;quot;rightViewChannel&amp;quot;对应的EventBus实例，已经注册了两个事件setRightPanelVisible和doSomething。</description></item></channel></rss>