<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>3rd on Mryqu's Notes</title><link>https://mryqu.github.io/tags/3rd/</link><description>Recent content in 3rd on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 25 Aug 2015 05:58:04 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/tags/3rd/index.xml" rel="self" type="application/rss+xml"/><item><title>SAS过程步支持的第三方编程语言</title><link>https://mryqu.github.io/post/sas%E8%BF%87%E7%A8%8B%E6%AD%A5%E6%94%AF%E6%8C%81%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</link><pubDate>Tue, 25 Aug 2015 05:58:04 +0000</pubDate><guid>https://mryqu.github.io/post/sas%E8%BF%87%E7%A8%8B%E6%AD%A5%E6%94%AF%E6%8C%81%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</guid><description>编程语言接口描述C, C++PROC PROTOPROC PROTO可以以批处理模式注册以外部的C或C++程序。当C函数在PROC PROTO注册后，他们能被FCMP过程里声明的任何SAS函数或子程序调用, 也能被COMPILE过程里声明的任何SAS函数、子程序或方法块调用。PROC FCMPSAS函数编译器(FCMP)过程可以创建、测试和存储SAS函数和CALL子程序，这些SAS函数和CALL子程序之后可用于其它SAS过程步或数据步。PROC FCMP能够使用数据步语法创建存储在数据集内的SAS函数和CALL子程序。该过程步接受数据步语句的轻微变化，你可以使用PROC FCMP所创建的SAS函数和CALL子程序中SAS编程语言的大部分功能。GroovyPROC GROOVYPROC GROOVY是在SAS9.3引入，为特定Groovy内联代码提供提交快的SAS程序，也能运行存储在外部文件中的Groovy程序。 JavaJAVAOBJSAS9提供的数据步组件对象。示例： ``` data _null_; length s_out $200; declare JavaObj j1 ('java/lang/String','KE'); declare JavaObj j2 ('java/lang/String','XIAO'); j1.callStringMethod ('concat', j2, s_out); put s_out=; j1.delete(); j2.delete(); run; ``` PROC JLAUNCHJLaunch过程步允许在SAS显示管理器系统（DMS）内启动Java GUI程序。示例： ``` proc jlaunch direct librefs debug app='com/sas/analytics/cmpfunceditor/app/FCmpFunctionEditorApp'; picklist name='base/cmpedit.txt'; run; ``` LuaPROC LUAPROC LUA是在SAS9.4引入，为特定Lua内联代码提供提交快的SAS程序，也能运行存储在外部文件中的Lua程序。RPROC IMLPROC IML提供了灵活的矩阵编程语言，可以与R集成。示例： ``` libname mmsamp "!sasroot\mmcommon\sample"; proc iml; run ExportDatasetToR("mmsamp.hmeq_train" , "mm_inds"); submit /R; attach(mm_inds) # ----------------------------------------------- # FITTING THE LOGISTIC MODEL # ----------------------------------------------- logiten&lt;- glm(BAD ~ VALUE + factor(REASON) + factor(JOB) + DEROG + CLAGE + NINQ + CLNO , family=binomial) # ----------------------------------------------- # SAVING THE OUTPUT PARAMETER ESTIMATE TO LOCAL FILE # ----------------------------------------------- save(logiten, file=&amp;quot;c:/temp/outmodel.</description></item><item><title>[OpenUI5] 第三方JavaScript库加载</title><link>https://mryqu.github.io/post/openui5_%E7%AC%AC%E4%B8%89%E6%96%B9javascript%E5%BA%93%E5%8A%A0%E8%BD%BD/</link><pubDate>Fri, 06 Feb 2015 20:28:33 +0000</pubDate><guid>https://mryqu.github.io/post/openui5_%E7%AC%AC%E4%B8%89%E6%96%B9javascript%E5%BA%93%E5%8A%A0%E8%BD%BD/</guid><description>SAP often put 3rd JavaScript libraries at \resources\sap\ui\thirdparty, then load as below:
jQuery.sap.require(&amp;#34;sap/ui/thirdparty/d3&amp;#34;); 样例： OpenUI5: D3.js based custom control and table
Custom SAPUI5 Visualization Controls with D3.js</description></item></channel></rss>