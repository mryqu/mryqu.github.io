<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ctags on Mryqu's Notes</title><link>https://mryqu.github.io/tags/ctags/</link><description>Recent content in ctags on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 09 Dec 2015 07:07:45 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/tags/ctags/index.xml" rel="self" type="application/rss+xml"/><item><title>Sublime Text2+Ctags+Cscope使用实践</title><link>https://mryqu.github.io/post/sublime_text2+ctags+cscope%E4%BD%BF%E7%94%A8%E5%AE%9E%E8%B7%B5/</link><pubDate>Wed, 09 Dec 2015 07:07:45 +0000</pubDate><guid>https://mryqu.github.io/post/sublime_text2+ctags+cscope%E4%BD%BF%E7%94%A8%E5%AE%9E%E8%B7%B5/</guid><description>安装 安装Package Control 步骤见https://packagecontrol.io/installation#st2
安装CTags插件 通过 Preference -&amp;gt; Package Control -&amp;gt; InstallPackage安装Ctags插件（快捷键Ctrl+Shift+P，输入install） 打开Preference -&amp;gt; Package Settings -&amp;gt; Ctags -&amp;gt;Settings-Default和Setting-User，将Settings-Default中的内容拷贝到Setting-User中，将&amp;quot;command&amp;quot;: &amp;quot;&amp;quot; 中的 &amp;quot;&amp;quot; 填入Ctags.exe的路径位置 打开C工程根目录，在上点击右键，选择Ctags:Rebuild tags 安装Cscope插件 同样通过 Preference -&amp;gt; Package Control -&amp;gt; InstallPackage安装Cscope插件（快捷键Ctrl+Shift+P，输入install） 通过cscope –Rb在C工程根目录创建cscope.out文件 Cscope在ST2上没有包配置菜单，需要打开CscopeSublime.sublime-settings文件(我的机器在C:/Users/yqu/AppData/Roaming/SublimeText 2/Packages/Cscope目录下)，将 &amp;ldquo;executable&amp;rdquo;: &amp;quot;&amp;quot; 中的 &amp;ldquo;&amp;ldquo;填入Cscope.exe的路径位置,将 &amp;ldquo;database_location&amp;rdquo;: &amp;quot;&amp;rdquo; 中的&amp;quot;&amp;ldquo;填入cscope.out的路径位置。 使用 CTags命令 |Command|Key Binding|Alt Binding|Mouse Binding |&amp;mdash;&amp;ndash; |rebuild_ctags|ctrl+t, ctrl+r| | |navigate_to_definition|ctrl+t, ctrl+t|ctrl+&amp;gt;|ctrl+shift+left_click |jump_prev|ctrl+t, ctrl+b|ctrl+&amp;lt;|ctrl+shift+right_click |show_symbols|alt+s| | |show_symbols (all files)|alt+shift+s| | |show_symbols (suffix)|ctrl+alt+shift+s| | Cscope命令 Ctrl + \ - Show Cscope options Ctrl + L , Ctrl + S - Look up symbol undercursor Ctrl + L , Ctrl + D - Look up definition undercursor Ctrl + L , Ctrl + E - Look up functions calledby the function under the cursor Ctrl + L , Ctrl + R - Look up functionscalling the function under the cursor Ctrl + Shift + [ - Jump back Ctrl + Shift + ] - Jump forward 其他快捷键 Ctrl + p - 快速定位项目中的文件 Ctrl + R - 获取当前文件中的函数列表（# 和 @分别为变量和函数），这个功能也使得ST2不需要taglist插件了。 参考 使用Sublime Text3+Ctags+Cscope替代Source Insight Exuberant Ctags笔记 Cscope笔记</description></item><item><title>Exuberant Ctags笔记</title><link>https://mryqu.github.io/post/exuberant_ctags%E7%AC%94%E8%AE%B0/</link><pubDate>Sat, 19 Oct 2013 14:46:08 +0000</pubDate><guid>https://mryqu.github.io/post/exuberant_ctags%E7%AC%94%E8%AE%B0/</guid><description>Ctags简介 Ctags（Generate tag files for sourcecode）产生标记(/索引)文件以帮助在源文件中定位对象。Ctags最初支持C语言，现在已经支持C/C++/Java/JS/Python等41种语言。Vim/Emacs/SublimeText/UltraEdit等编辑器或工具都支持Ctags生成的标记文件。 对于C/C++语言来说，其生成的标记文件tags中包括这些对象的列表：
用#define定义的宏 枚举型变量的值 函数的定义、原型和声明 名字空间（namespace） 类型定义（typedefs） 变量（包括定义和声明） 类（class）、结构（struct）、枚举类型（enum）和联合（union） 类、结构和联合中成员变量或函数 安装 下载ctags58.zip，将其中的ctags.exe解压缩到系统环境变量path包含的路径即可。 使用选项 如果没有指定−−language−force选项，每个源文件的语言基于文件名和语言的映射进行自动选择。该映射可用−−list−maps选项显示，它可能会被−−langmap选项改变。对于操作系统所支持的文件，如果文件名无法映射到某种语言且该文件可被执行，则会对文件第一行检查是为&amp;quot;#!&amp;ldquo;公认的语言脚本。默认情况下，所有其他文件名都会被忽略。由于仅文件名可匹配某种语言的文件会被扫描，这使得在单个目录对所有文件(例如&amp;quot;ctags*&amp;quot;)或对目录树的所有文件(例如&amp;quot;ctags −R&amp;rdquo;)执行ctags成为可能。.h扩展名即用于C++也用于C，所以Ctags将.h映射为C++，这样做不会有不良后果。
-R：等同于&amp;ndash;recurse，递归子目录遍历 -L：从文件读取Ctags待处理文件列表并对其执行ctags find . -name &amp;#34;*.h&amp;#34; -o -name &amp;#34;*.c&amp;#34; -o -name &amp;#34;*.cpp&amp;#34; -o -name &amp;#34;*.bld&amp;#34; -o -name &amp;#34;*.blt&amp;#34; &amp;gt; prj.files ctags -L prj.files --list−maps：显示文件名和语言的映射 --list−languanges：显示所有支持的语言 --langmap：设置文件名和语言的映射 如果程序中有的.c文件其实是C++程序，这该怎么办？答案是使用ctags &amp;ndash;langmap=c++:+.c。 −−language−force：强制使用特定语言，而不是通过文件名和语言的映射进行自动选择 像C++标准库stl中文件名没有后缀，怎么办？ 使用ctags−−language−force=C++这样就把所有文件当成C++来处理了。 −−fields：指定标记文件中条目的可用扩展字段（没有指明的默认关闭） --{language}-kinds：指定输出中需包含的特定语言标记列表 使用ctags &amp;ndash;list-kinds=c++可以查看选项： --extra：用于增加额外的标记条目 OmniCppComplete 提供的ctags生成语句示例：
ctags -R –c++-kinds=+px –fields=+iaS –extra=+q . 通过Vim使用标记文件 |命令|介绍 |&amp;mdash; |vi -t tag|启动Vim并定位到标记所定义的文件和代码行上。 |:ta tag|查找一个标记。 |Ctrl-]|跳到光标所在函数或者结构体的定义处。 |Ctrl-T|返回到跳转标记之前的位置。 |:ts|:tselect, 列出一个列表供用户选标记。 |:tp|:tprevious，上一个tag标记文件。 |:tn|:tnext，下一个tag标记文件。 |:tfirst|第一个tag标记文件。 |:tlast|最后一个tag标记文件。</description></item></channel></rss>