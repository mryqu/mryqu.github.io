<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cscope on Mryqu's Notes</title><link>https://mryqu.github.io/tags/cscope/</link><description>Recent content in cscope on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 09 Dec 2015 07:07:45 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/tags/cscope/index.xml" rel="self" type="application/rss+xml"/><item><title>Sublime Text2+Ctags+Cscope使用实践</title><link>https://mryqu.github.io/post/sublime_text2+ctags+cscope%E4%BD%BF%E7%94%A8%E5%AE%9E%E8%B7%B5/</link><pubDate>Wed, 09 Dec 2015 07:07:45 +0000</pubDate><guid>https://mryqu.github.io/post/sublime_text2+ctags+cscope%E4%BD%BF%E7%94%A8%E5%AE%9E%E8%B7%B5/</guid><description>安装 安装Package Control 步骤见https://packagecontrol.io/installation#st2
安装CTags插件 通过 Preference -&amp;gt; Package Control -&amp;gt; InstallPackage安装Ctags插件（快捷键Ctrl+Shift+P，输入install） 打开Preference -&amp;gt; Package Settings -&amp;gt; Ctags -&amp;gt;Settings-Default和Setting-User，将Settings-Default中的内容拷贝到Setting-User中，将&amp;quot;command&amp;quot;: &amp;quot;&amp;quot; 中的 &amp;quot;&amp;quot; 填入Ctags.exe的路径位置 打开C工程根目录，在上点击右键，选择Ctags:Rebuild tags 安装Cscope插件 同样通过 Preference -&amp;gt; Package Control -&amp;gt; InstallPackage安装Cscope插件（快捷键Ctrl+Shift+P，输入install） 通过cscope –Rb在C工程根目录创建cscope.out文件 Cscope在ST2上没有包配置菜单，需要打开CscopeSublime.sublime-settings文件(我的机器在C:/Users/yqu/AppData/Roaming/SublimeText 2/Packages/Cscope目录下)，将 &amp;ldquo;executable&amp;rdquo;: &amp;quot;&amp;quot; 中的 &amp;ldquo;&amp;ldquo;填入Cscope.exe的路径位置,将 &amp;ldquo;database_location&amp;rdquo;: &amp;quot;&amp;rdquo; 中的&amp;quot;&amp;ldquo;填入cscope.out的路径位置。 使用 CTags命令 |Command|Key Binding|Alt Binding|Mouse Binding |&amp;mdash;&amp;ndash; |rebuild_ctags|ctrl+t, ctrl+r| | |navigate_to_definition|ctrl+t, ctrl+t|ctrl+&amp;gt;|ctrl+shift+left_click |jump_prev|ctrl+t, ctrl+b|ctrl+&amp;lt;|ctrl+shift+right_click |show_symbols|alt+s| | |show_symbols (all files)|alt+shift+s| | |show_symbols (suffix)|ctrl+alt+shift+s| | Cscope命令 Ctrl + \ - Show Cscope options Ctrl + L , Ctrl + S - Look up symbol undercursor Ctrl + L , Ctrl + D - Look up definition undercursor Ctrl + L , Ctrl + E - Look up functions calledby the function under the cursor Ctrl + L , Ctrl + R - Look up functionscalling the function under the cursor Ctrl + Shift + [ - Jump back Ctrl + Shift + ] - Jump forward 其他快捷键 Ctrl + p - 快速定位项目中的文件 Ctrl + R - 获取当前文件中的函数列表（# 和 @分别为变量和函数），这个功能也使得ST2不需要taglist插件了。 参考 使用Sublime Text3+Ctags+Cscope替代Source Insight Exuberant Ctags笔记 Cscope笔记</description></item><item><title>Cscope笔记</title><link>https://mryqu.github.io/post/cscope%E7%AC%94%E8%AE%B0/</link><pubDate>Sat, 19 Oct 2013 20:20:11 +0000</pubDate><guid>https://mryqu.github.io/post/cscope%E7%AC%94%E8%AE%B0/</guid><description>Cscope简介 Cscope是一个类似Ctags的工具，但功能比ctags强大很多。Cscope是一款自带一个基于文本的用户界面的源代码浏览工具，尽管它最初是为C代码的搜索（包括lex、yacc文件）设计的，但是也可以用于对C++和Java代码的搜索。用Cscope你可以轻易地搜索到你的标识符是在哪里被定义和使用的，它可以轻而易举地解决以下问题：
这个变量在哪里被使用？ 这个预处理符号的值是什么？ 这个函数都在哪些源代码文件中出现过？ 都有哪些函数调用了这个函数？ &amp;ldquo;out of space&amp;quot;的消息是从哪里来的？ 这个源文件在在目录结构中的位置？ 都有哪些源文件包含了这个头文件？ Cscope是由Santa Cruz Operation, Inc发布的，它遵循BSD开源协议。
安装 Cscope项目仅提供源代码，不提供二进制文件。cscope-win32项目提供了使用MinGW、MSYS和Cygwin编译Windows平台Cscope的方法，此外也提供编译好好的csope.exe文件。下载cscope-15.8a-win64rev1-static.zip，将其中的cscope.exe解压缩到系统环境变量path包含的路径即可。 使用 创建符号数据库 Cscope在第一次被使用在指定的源文件时会建立一个符号的数据库。接下来调用时，Cscope仅仅重建那些被改动或者和新文件相关的数据库。那些没有被改动的文件相关的数据库会被直接复制使用。这使得重建数据库要比第一次运行快许多。 Cscope命令的参数如下：
-R: 在生成索引文件时，搜索子目录树中的代码 -b: 只生成索引文件，不进入cscope的界面 -q:生成cscope.in.out和cscope.po.out文件，加快cscope的索引速度 -k: 在生成索引文件时，不搜索/usr/include目录 -i:如果保存文件列表的文件名不是cscope.files时，需要加此选项告诉cscope到哪儿去找源文件列表。可以使用”-“，表示由标准输入获得文件列表。 -Idir:在**-I**选项指出的目录中查找头文件 -u: 扫描所有文件，重新生成交叉索引文件 -C: 在搜索时忽略大小写 -Ppath:在以相对路径表示的文件前加上的path，这样，你不用切换到你数据库文件所在的目录也可以使用它了。 我针对curl项目执行cscope -Rkq ，这样会启动Cscope的文本用户界面，之后我搜索set_binmode函数： 搜索符号 在Cscope的文本界面里可以在命令模式执行:cs find或:cs f命令搜索符号，其参数为：
s: 查找C语言符号，即查找函数名、宏、枚举值等出现的地方 g: 查找函数、宏、枚举等定义的位置，类似ctags所提供的功能 d: 查找本函数调用的函数 c: 查找调用本函数的函数 t: 查找指定的字符串 e: 查找egrep模式，相当于egrep功能，但查找速度快多了 f: 查找并打开文件，类似vim的find功能 i: 查找包含本文件的文件 下面示例为用
:cs f c set_binmode 命令搜索set_binmode函数的调用者：
E567: no cscope connections错误处理 有个帖子vim cannot connect to cscope database讲过解决方案，但是在我的Windows平台cscope文本界面不起作用。通过:cs add {prj path}/cscope.</description></item></channel></rss>