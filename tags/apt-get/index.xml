<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>apt-get on Mryqu's Notes</title><link>https://mryqu.github.io/tags/apt-get/</link><description>Recent content in apt-get on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 05 Jul 2015 21:32:25 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/tags/apt-get/index.xml" rel="self" type="application/rss+xml"/><item><title>apt-get在基于Ubuntu基础镜像Dockerfile中的常见用法</title><link>https://mryqu.github.io/post/apt-get%E5%9C%A8%E5%9F%BA%E4%BA%8Eubuntu%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8Fdockerfile%E4%B8%AD%E7%9A%84%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/</link><pubDate>Sun, 05 Jul 2015 21:32:25 +0000</pubDate><guid>https://mryqu.github.io/post/apt-get%E5%9C%A8%E5%9F%BA%E4%BA%8Eubuntu%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8Fdockerfile%E4%B8%AD%E7%9A%84%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/</guid><description>首先，在Ubuntu的Docker官方镜像中是没有缓存Apt的软件包列表的。因此在做其他任何基础软件的安装前，都需要至少先做一次apt-get update。 有时为了加快apt-get安装软件的速度，还需要修改Apt源的列表文件/etc/apt/sources.list。相应的操作用命令表示如下：
# 使用Ubuntu官方的Apt源，也可以根据实际需要修改为国内源的地址 echo &amp;#34;deb http://archive.ubuntu.com/ubuntu trusty main universe\n&amp;#34; &amp;gt; /etc/apt/sources.list echo &amp;#34;deb http://archive.ubuntu.com/ubuntu trusty-updates main universe\n&amp;#34; &amp;gt;&amp;gt; /etc/apt/sources.list 在容器构建时，为了避免使用apt-get install安装基础软件的过程中需要进行的交互操作，使用-y参数来避免安装非必须的文件，从而减小镜像的体积。
apt-get -y --no-install-recommends install 使用apt-get autoremove命令移除为了满足包依赖而安装的、但不再需要的包；使用apt-get clean命令清除所获得包文件的本地仓库。 DEBIAN_FRONTEND这个环境变量，告知操作系统应该从哪儿获得用户输入。如果设置为&amp;quot;noninteractive&amp;quot;，你就可以直接运行命令，而无需向用户请求输入（所有操作都是非交互式的）。这在运行apt-get命令的时候格外有用，因为它会不停的提示用户进行到了哪步并且需要不断确认。非交互模式会选择默认的选项并以最快的速度完成构建。请确保只在Dockerfile中调用的RUN命令中设置了该选项，而不是使用ENV命令进行全局的设置。因为ENV命令在整个容器运行过程中都会生效，所以当你通过BASH和容器进行交互时，如果进行了全局设置那就会出问题。
# 正确的做法 - 只为这个命令设置ENV变量 RUN DEBIAN_FRONTEND=noninteractive apt-get install -y python3 # 错误地做法 - 为接下来的任何命令都设置ENV变量，包括正在运行地容器 ENV DEBIAN_FRONTEND noninteractive RUN apt-get install -y python3 我的示例如下：
FROM ubuntu:trusty MAINTAINER mryqu RUN \ DEBIAN_FRONTEND=noninteractive apt-get update &amp;amp;&amp;amp; \ DEBIAN_FRONTEND=noninteractive apt-get -y install wget curl &amp;amp;&amp;amp; \ DEBIAN_FRONTEND=noninteractive apt-get -y autoremove &amp;amp;&amp;amp; \ DEBIAN_FRONTEND=noninteractive apt-get clean 参考 Ubuntu manuals: apt-get man page</description></item><item><title>Apt-get代理配置</title><link>https://mryqu.github.io/post/apt-get%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/</link><pubDate>Wed, 20 May 2015 00:03:27 +0000</pubDate><guid>https://mryqu.github.io/post/apt-get%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/</guid><description>在公司安装Ubuntu docker后使用apt-get update总是失败，经历了一番周折才成功。
DNS？ 一开始怀疑是DNS问题，可以学习了下面几个帖子：
Docker apt-get update fails Docker - Network calls fail during image build on corporate network How do I set my DNS on Ubuntu 14.04? 检查我ubuntu配置：
cat /etc/resolv.conf 确认DNS没有问题。
Ubuntu官方服务器？ 是不是我的机器连不上欧美的Ubuntu官方服务器，换成中国服务器试试。尝试了Ubuntu 14.04服务器列表上的中国服务器还是不成。
Apt-get代理？ 照着how to install packages with apt-get on a system connected via proxy?设置一番，成功了
设置/etc/apt/apt.conf：
Acquire::http::proxy &amp;#34;http://yourServer:yourPort/&amp;#34;; Acquire::ftp::proxy &amp;#34;ftp://yourServer:yourPort/&amp;#34;; Acquire::https::proxy &amp;#34;https://yourServer:yourPort/&amp;#34;; 如需用户名、密码，则作如下修改：
Acquire::http::proxy &amp;#34;http://yourUsr:yourPwd@yourServer:yourPort/&amp;#34;; Acquire::ftp::proxy &amp;#34;ftp://yourUsr:yourPwd@yourServer:yourPort/&amp;#34;; Acquire::https::proxy &amp;#34;https://yourUsr:yourPwd@yourServer:yourPort/&amp;#34;; 最好将上述配置也存入/etc/apt/apt.conf.d/80proxy中，这样版本升级后这些变更也不会丢。</description></item><item><title>Debian软件包管理速查表：dpkg、apt-get、apt-cache</title><link>https://mryqu.github.io/post/debian%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86%E9%80%9F%E6%9F%A5%E8%A1%A8dpkgapt-getapt-cache/</link><pubDate>Fri, 18 Oct 2013 19:54:39 +0000</pubDate><guid>https://mryqu.github.io/post/debian%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86%E9%80%9F%E6%9F%A5%E8%A1%A8dpkgapt-getapt-cache/</guid><description>dpkg是Debian系统底层包管理器，apt-get是高层包管理工具，apt-cache是高层包查询工具。
dpkg速查表 dpkg是Debian Linux用于安装/管理单个软件包的命令行工具：
apt-get速查表 apt-get是Debian Linux用于管理软件包的命令行工具：
安装/管理单个软件包 升级软件包 打安全补丁 使Debian系统更新到最新状态 下载源.deb文件 FrontEnd有很多GUI和应用 |语法|描述|示例 |&amp;mdash; |apt-get install {package}|安装新的软件包。如果软件包已安装则尝试更新到最新版本|apt-get install zipapt-get install lsof samba mysql-client |apt-get remove {package}|移除一个已安装的软件包，保留配置文件|apt-get remove zip |apt-get &amp;ndash;purge remove {package}|移除一个已安装的软件包及配置|apt-get &amp;ndash;purge remove mysql-server |apt-get updateapt-get upgrade|重新同步包索引文件并升级Debian Linux系统及安全更新 (需要访问因特网)|apt-get updateapt-get upgrade |apt-get updateapt-get dist-upgrade|经常用于升级Debian分发。例如Woody升级到Sarge，&amp;lsquo;dist-upgrade&amp;rsquo;除了执行升级功能，也只能处理包新版本改变了的依赖关系；apt-get具有&amp;quot;智能&amp;quot;冲突解决系统，在必要时会试图以重要性较小的包为代价升级最重要的包。|apt-get updateapt-get dist-upgrade
apt-cache速查表 |语法|描述|示例 |&amp;mdash; |apt-cache pkgnames|列举所有有效包| |apt-cache depends {package}|检查包的依赖|apt-cache depends lsofapt-cache depends mysql-server |apt-cache search {progname}|通过关键字搜索包列表|apt-cache search mysqlapt-cache search &amp;ldquo;Network Security&amp;rdquo; |apt-cache show {package}|显示包的信息|apt-cache show screen</description></item></channel></rss>