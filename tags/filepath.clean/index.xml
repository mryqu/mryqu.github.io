<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>filepath.Clean on Mryqu's Notes</title><link>https://mryqu.github.io/tags/filepath.clean/</link><description>Recent content in filepath.Clean on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 23 Feb 2021 12:31:23 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/tags/filepath.clean/index.xml" rel="self" type="application/rss+xml"/><item><title>GoLang语言filepath.Clean功能在AIX脚本中的实现</title><link>https://mryqu.github.io/post/shell-substitutes-for-filepath.clean-of-golang/</link><pubDate>Tue, 23 Feb 2021 12:31:23 +0000</pubDate><guid>https://mryqu.github.io/post/shell-substitutes-for-filepath.clean-of-golang/</guid><description>GoLang语言filepath包Clean函数功能如下：
Replace multiple Separator elements with a single one. Eliminate each . path name element (the current directory). Eliminate each inner .. path name element (the parent directory) along with the non-.. element that precedes it. Eliminate .. elements that begin a rooted path: that is, replace &amp;ldquo;/..&amp;rdquo; by &amp;ldquo;/&amp;rdquo; at the beginning of a path, assuming Separator is &amp;lsquo;/&amp;rsquo;. perl等价功能 File::Spec 模块的canonpath函数与GoLang语言filepath包Clean函数功能基本类似，都不进行文件系统物理检查仅完成路径逻辑清理。
No physical check on the filesystem, but a logical cleanup of a path.</description></item></channel></rss>