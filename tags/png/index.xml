<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>png on Mryqu's Notes</title><link>https://mryqu.github.io/tags/png/</link><description>Recent content in png on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 25 Feb 2015 19:50:09 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/tags/png/index.xml" rel="self" type="application/rss+xml"/><item><title>玩玩GoJS BPMN样例</title><link>https://mryqu.github.io/post/%E7%8E%A9%E7%8E%A9gojs_bpmn%E6%A0%B7%E4%BE%8B/</link><pubDate>Wed, 25 Feb 2015 19:50:09 +0000</pubDate><guid>https://mryqu.github.io/post/%E7%8E%A9%E7%8E%A9gojs_bpmn%E6%A0%B7%E4%BE%8B/</guid><description>玩一玩GoJS，GoJS是Northwoods Software的产品。Northwoods Software创立于1995年，专注于交互图控件和类库。旗下四款产品：
GoJS：用于在HTML上创建交互图的纯javaSCript库，GoJS支持复杂的模板定义和数据绑定。 GoDiagram：用于WinForms的.NET图控件。 GoXam：用于WPF/Silverlight的图控件。 JGo：用于Swing/SWT中创建交互图的java库。 试了一下GoJS的BPMN样例，很容易导出SVG或PNG/JPEG等格式的图像数据。其中：
由于GoJS是经过代码混淆的，不能对makeSVG方法进行确定的分析，大概是采用HTMLCanvasElement.getContext(&amp;lsquo;2d&amp;rsquo;).drawImage(&amp;hellip;).getImageData(&amp;hellip;)获得的 makeImage和makeImageData方法通过HTMLCanvasElement.toDataURL()方法实现的 在控制台执行window.myDiagram.model.toJson()，返回如下结果：
{ &amp;#34;class&amp;#34;: &amp;#34;go.GraphLinksModel&amp;#34;, &amp;#34;linkFromPortIdProperty&amp;#34;: &amp;#34;fromPort&amp;#34;, &amp;#34;linkToPortIdProperty&amp;#34;: &amp;#34;toPort&amp;#34;, &amp;#34;nodeDataArray&amp;#34;: [ { &amp;#34;category&amp;#34;: &amp;#34;activity&amp;#34;, &amp;#34;item&amp;#34;: &amp;#34;User task&amp;#34;, &amp;#34;key&amp;#34;: 7, &amp;#34;loc&amp;#34;: &amp;#34;388.33645784919577 140.35229369949943&amp;#34;, &amp;#34;text&amp;#34;: &amp;#34;User Task&amp;#34;, &amp;#34;taskType&amp;#34;: 2, &amp;#34;boundaryEventArray&amp;#34;: [ ], &amp;#34;size&amp;#34;: &amp;#34;120 80&amp;#34; }, { &amp;#34;category&amp;#34;: &amp;#34;event&amp;#34;, &amp;#34;item&amp;#34;: &amp;#34;End&amp;#34;, &amp;#34;key&amp;#34;: 104, &amp;#34;loc&amp;#34;: &amp;#34;569.86545617508 140.90913111767696&amp;#34;, &amp;#34;text&amp;#34;: &amp;#34;End&amp;#34;, &amp;#34;eventType&amp;#34;: 1, &amp;#34;eventDimension&amp;#34;: 8 }, { &amp;#34;category&amp;#34;: &amp;#34;event&amp;#34;, &amp;#34;item&amp;#34;: &amp;#34;start&amp;#34;, &amp;#34;key&amp;#34;: 101, &amp;#34;loc&amp;#34;: &amp;#34;183.42028795985397 135.34075693590137&amp;#34;, &amp;#34;text&amp;#34;: &amp;#34;Start&amp;#34;, &amp;#34;eventType&amp;#34;: 1, &amp;#34;eventDimension&amp;#34;: 1 } ], &amp;#34;linkDataArray&amp;#34;: [ { &amp;#34;from&amp;#34;: 101, &amp;#34;to&amp;#34;: 7, &amp;#34;fromPort&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;toPort&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;points&amp;#34;: [ 204.</description></item></channel></rss>