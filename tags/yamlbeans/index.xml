<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yamlbeans on Mryqu&#39;s Notes</title>
    <link>https://mryqu.github.io/tags/yamlbeans/</link>
    <description>Recent content in Yamlbeans on Mryqu&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 01 Jul 2015 05:37:02 +0000</lastBuildDate>
    
	<atom:link href="https://mryqu.github.io/tags/yamlbeans/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java解析YAML</title>
      <link>https://mryqu.github.io/post/java%E8%A7%A3%E6%9E%90yaml/</link>
      <pubDate>Wed, 01 Jul 2015 05:37:02 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/java%E8%A7%A3%E6%9E%90yaml/</guid>
      <description>继前博文YAML介绍了YAML语法，本文将着重研究Java解析YAML。当前还在维护的YAML解析器/生成器有： - SnakeYAML - 完整的YAML 1.1解析器，尤其是SnakeYAML能够分析来自于规范的所有示例 - 支持Unicode，包括UTF-8/UTF-16的输入/输出 - 为序列化和反序列化本地的Java对象提供了高级API - 支持YAML类型库中的所有类型 - 比较理性的错误信息 - YamlBeans：支持YAML 1.0和1.1 - FasterXML/jackson-dataformat-yaml：处于原型阶段
SnakeYAML和YamlBeans都在GoogleCode仓库时，SnakeYAML的使用人数和提交者均优于YamlBeans。目前大多数帖子还是推荐选用SnakeYAML，而SpringBoot读取YAML配置采用的就是SnakeYAML。为了测试SnakeYAML，我首先创建了一个HelloSnakeYAML项目。
conf.yaml spring: application: name: cruncher datasource: driverClassName: com.mysql.jdbc.Driver url: jdbc:mysql://localhost/test server: port: 9000  Contact.java package com.yqu.yaml; import java.util.List; public class Contact { private String name; private int age; private List phoneNumbers; public Contact(String name, int age, List phoneNumbers) { this.name = name; this.age = age; this.phoneNumbers = phoneNumbers; } public String getName() { return name; } public void setName(String name) { this.</description>
    </item>
    
  </channel>
</rss>