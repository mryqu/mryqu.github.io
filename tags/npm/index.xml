<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>npm on Mryqu's Notes</title><link>https://mryqu.github.io/tags/npm/</link><description>Recent content in npm on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 25 Apr 2020 12:01:23 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/tags/npm/index.xml" rel="self" type="application/rss+xml"/><item><title>Gradle构建ReactJS前端实践</title><link>https://mryqu.github.io/post/gradle%E6%9E%84%E5%BB%BAreactjs%E5%89%8D%E7%AB%AF%E5%AE%9E%E8%B7%B5/</link><pubDate>Sat, 25 Apr 2020 12:01:23 +0000</pubDate><guid>https://mryqu.github.io/post/gradle%E6%9E%84%E5%BB%BAreactjs%E5%89%8D%E7%AB%AF%E5%AE%9E%E8%B7%B5/</guid><description>frontend-maven-plugin使用介绍 Spring指南里面有个示例React.js and Spring Data REST ，技术架构为：
后端采用Spring Data Rest 前端采用React.js 构建工具为Maven 下面看一下其pom.xml构建前端的片段:
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;com.github.eirslett&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;frontend-maven-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.6&amp;lt;/version&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;installDirectory&amp;gt;target&amp;lt;/installDirectory&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;executions&amp;gt; &amp;lt;execution&amp;gt; &amp;lt;id&amp;gt;install node and npm&amp;lt;/id&amp;gt; &amp;lt;goals&amp;gt; &amp;lt;goal&amp;gt;install-node-and-npm&amp;lt;/goal&amp;gt; &amp;lt;/goals&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;nodeVersion&amp;gt;v10.11.0&amp;lt;/nodeVersion&amp;gt; &amp;lt;npmVersion&amp;gt;6.4.1&amp;lt;/npmVersion&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;/execution&amp;gt; &amp;lt;execution&amp;gt; &amp;lt;id&amp;gt;npm install&amp;lt;/id&amp;gt; &amp;lt;goals&amp;gt; &amp;lt;goal&amp;gt;npm&amp;lt;/goal&amp;gt; &amp;lt;/goals&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;arguments&amp;gt;install&amp;lt;/arguments&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;/execution&amp;gt; &amp;lt;execution&amp;gt; &amp;lt;id&amp;gt;webpack build&amp;lt;/id&amp;gt; &amp;lt;goals&amp;gt; &amp;lt;goal&amp;gt;webpack&amp;lt;/goal&amp;gt; &amp;lt;/goals&amp;gt; &amp;lt;/execution&amp;gt; &amp;lt;/executions&amp;gt; &amp;lt;/plugin&amp;gt; frontend-maven-plugin 用于构建JavaScript部分：
install-node-and-npm命令将安装node.js及其包管理工具npm到target目录。 （这确保这些二进制文件不在源代码控制范围内并且能被clean命令清除）。 npm命令将执行使用参数install的npm二进制文件，它会安装定义在package.json内的模块。 webpack命令将执行webpack二进制文件，它会基于webpack.config.js打包所有JavaScript代码。 这些步骤依次运行，完成安装node.js、下载JavaScript模块、构建JS部分。
备选Gradle前端构建插件 frontend-maven-plugin 是专用于Maven的插件，在Gradle上并没有直接对应的插件。
我查找后，重点考察了下面两个插件：
Frontend Gradle plugin Gradle Plugin for Node Frontend Gradle plugin实践 代码修改 package.</description></item><item><title>折腾openui5-sample-app之使用Yarn替换Bower</title><link>https://mryqu.github.io/post/node_%E6%8A%98%E8%85%BEopenui5-sample-app%E4%B9%8B%E4%BD%BF%E7%94%A8yarn%E6%9B%BF%E6%8D%A2bower/</link><pubDate>Thu, 13 Sep 2018 00:00:00 +0000</pubDate><guid>https://mryqu.github.io/post/node_%E6%8A%98%E8%85%BEopenui5-sample-app%E4%B9%8B%E4%BD%BF%E7%94%A8yarn%E6%9B%BF%E6%8D%A2bower/</guid><description>SAP/openui5-sample-app是使用npm下载依赖的后端开发和构建模块，使用bower下载依赖的前端openui5库。 在npm install的过程中提示&amp;quot;npm WARN deprecated bower@1.8.4: We don&amp;rsquo;t recommend using Bower for new projects. Please consider Yarn and Webpack or Parcel. You can read how to migrate legacy project here: https://bower.io/blog/2017/how-to-migrate-away-from-bower/&amp;quot;。 对于SAP这个小示例，区分前端和后端使用包管理器有点浪费！对于所有的依赖模块，可以要么使用npm，要么使用yarn。
删除bower_components和dist目录
安装yarn：
npm install yarn -g 去掉bower.json 不过其中依赖的openui5/packaged-sap.ui.core、openui5/packaged-sap.m、openui5/packaged-themelib_sap_belize仅仅bower能够获取，在npm仓库里是找不到的。
修改package.json
去除bower模块 去除postinstall脚本 增加@openui5/sap.m依赖 增加@openui5/sap.ui.core依赖 增加@openui5/themelib_sap_belize依赖 修改Gruntfile.js npm仓库里的@openui5/sap.m、@openui5/sap.ui.core、@openui5/themelib_sap_belize仅包含openui5/packaged-sap.ui.core、openui5/packaged-sap.m、openui5/packaged-themelib_sap_belize中resources的部分，而不包含test-resources的部分。 对于openui5_connect任务，我认为无需test-resources部分即可。 将openui5库的定位从bower_components目录下改为node_modules目录下的相应位置 构建测试 yarn grunt build grunt serve 参考 SAP/grunt-openui5
JS新包管理工具yarn和npm的对比与使用入门</description></item><item><title>折腾openui5-sample-app之使用npm镜像</title><link>https://mryqu.github.io/post/node_%E6%8A%98%E8%85%BEopenui5-sample-app%E4%B9%8B%E4%BD%BF%E7%94%A8npm%E9%95%9C%E5%83%8F/</link><pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate><guid>https://mryqu.github.io/post/node_%E6%8A%98%E8%85%BEopenui5-sample-app%E4%B9%8B%E4%BD%BF%E7%94%A8npm%E9%95%9C%E5%83%8F/</guid><description>学习了一下SAP/openui5-sample-app，看看SAP是如何使用构建前端的。 SAP/openui5-sample-app中npm安装模块是从https://www.npmjs.com/下载的，不知道从淘宝NPM镜像下载是否会快些。
对npm使用镜像有以下几种方式，这里我使用第三种：
通过config命令 npm config set registry https://registry.npm.taobao.org npm info underscore 命令行指定 npm --registry https://registry.npm.taobao.org info underscore 在.npmrc文件中指定 registry = https://registry.npm.taobao.org 结果，速度上没什么感觉，都不快！</description></item><item><title>[JS] 通过升级npm解决了error TS2322和TS2307</title><link>https://mryqu.github.io/post/js_%E9%80%9A%E8%BF%87%E5%8D%87%E7%BA%A7npm%E8%A7%A3%E5%86%B3%E4%BA%86error_ts2322%E5%92%8Cts2307/</link><pubDate>Sun, 28 Jan 2018 05:48:25 +0000</pubDate><guid>https://mryqu.github.io/post/js_%E9%80%9A%E8%BF%87%E5%8D%87%E7%BA%A7npm%E8%A7%A3%E5%86%B3%E4%BA%86error_ts2322%E5%92%8Cts2307/</guid><description>上一个项目有个defect需要解决，很久没有动它了，所以一上来先git pull更新代码库，然后通过gradlew clean build &amp;ndash;refresh-dependencies进行构建，不料竟然碰到很多TS2322和TS2307错误，最后:grunt_build任务以失败告终。通过如下命令更新npm，问题不复重现。
npm cache clean npm install 不过具体是怎么解决的问题，还是不太清楚。有可能是因为npm升级了TypeScript，从而使问题得以解决。
C:\&amp;gt;npm list -g C:\Users\xxxxxx\AppData\Roaming\npm `-- typescript@2.1.6 C:\xxxgitws\xxxxxx-app&amp;gt;npm list typescript xxxxxx-app@3.0.0-0 C:\xxxgitws\xxxxxx-app `-- guides-buildtools-openuibundled@8.0.0 `-- guides-buildtools-openui@8.0.0 `-- typescript@2.4.1</description></item><item><title>Node.js npm代理设置</title><link>https://mryqu.github.io/post/node.js_npm%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/</link><pubDate>Wed, 30 Sep 2015 06:06:46 +0000</pubDate><guid>https://mryqu.github.io/post/node.js_npm%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/</guid><description>用Gradle编译当前一个项目，总是报告Node.js的包管理工具npm安装node包失败。美国那边没有问题，不知道是否跟防火墙有关。
npm的代理设置为：
npm config set proxy http://proxyServer:proxyPort npm config set https-proxy http://proxyServer:proxyPort 操作显示能解决我的部分问题！
参考 NPM小结</description></item></channel></rss>