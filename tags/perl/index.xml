<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>perl on Mryqu's Notes</title><link>https://mryqu.github.io/tags/perl/</link><description>Recent content in perl on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 23 Feb 2021 12:31:23 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/tags/perl/index.xml" rel="self" type="application/rss+xml"/><item><title>GoLang语言filepath.Clean功能在AIX脚本中的实现</title><link>https://mryqu.github.io/post/shell-substitutes-for-filepath.clean-of-golang/</link><pubDate>Tue, 23 Feb 2021 12:31:23 +0000</pubDate><guid>https://mryqu.github.io/post/shell-substitutes-for-filepath.clean-of-golang/</guid><description>GoLang语言filepath包Clean函数功能如下：
Replace multiple Separator elements with a single one. Eliminate each . path name element (the current directory). Eliminate each inner .. path name element (the parent directory) along with the non-.. element that precedes it. Eliminate .. elements that begin a rooted path: that is, replace &amp;ldquo;/..&amp;rdquo; by &amp;ldquo;/&amp;rdquo; at the beginning of a path, assuming Separator is &amp;lsquo;/&amp;rsquo;. perl等价功能 File::Spec 模块的canonpath函数与GoLang语言filepath包Clean函数功能基本类似，都不进行文件系统物理检查仅完成路径逻辑清理。
No physical check on the filesystem, but a logical cleanup of a path.</description></item><item><title>正则表达式风格与语法对比</title><link>https://mryqu.github.io/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E9%A3%8E%E6%A0%BC%E4%B8%8E%E8%AF%AD%E6%B3%95%E5%AF%B9%E6%AF%94/</link><pubDate>Fri, 11 Oct 2013 06:26:12 +0000</pubDate><guid>https://mryqu.github.io/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E9%A3%8E%E6%A0%BC%E4%B8%8E%E8%AF%AD%E6%B3%95%E5%AF%B9%E6%AF%94/</guid><description>现在很多编程语言都支持正则表达式，一般都会提到是Perl风格（PCRE，Perl兼容正则表达式）还是POSIX风格（IEEE制定的POSIXExtended 1003.2标准）。解析POSIX与Perl标准的正则表达式区别详细介绍了这两种风格正则表达式的区别。我对正则表达式的使用主要是Java语言中，其次在R、Python和Javascript中有不同程度的涉猎。不同软件的正则表达式语法汇总介绍了不同语言/软件之间的区别。
参考 https://developer.mozilla.org/en/docs/web/javascript/guide/regular_expressions https://stat.ethz.ch/R-manual/R-devel/library/base/html/regex.html https://docs.python.org/2/library/re.html</description></item></channel></rss>