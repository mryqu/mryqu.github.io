<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>r on Mryqu's Notes</title><link>https://mryqu.github.io/tags/r/</link><description>Recent content in r on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 14 May 2015 05:48:20 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/tags/r/index.xml" rel="self" type="application/rss+xml"/><item><title>数据科学的战争：R vs Python</title><link>https://mryqu.github.io/post/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E7%9A%84%E6%88%98%E4%BA%89r_vs_python/</link><pubDate>Thu, 14 May 2015 05:48:20 +0000</pubDate><guid>https://mryqu.github.io/post/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E7%9A%84%E6%88%98%E4%BA%89r_vs_python/</guid><description>R和Python都是用于数据分析任务的流行编程语言，都有各自的拥拓者和反对者。Python经常作为语法简单易懂的通用编程语言广受赞誉。在人们心中，R的功能是由统计学家开发的，因此具有特定领域优势，例如数据可视化上具有的大量功能。 DataCamp上有一篇帖子Choosing R or Python for data analysis? An infographic以信息图的方式从数据科学和统计的角度详细对比了R和Python这两种编程语言。</description></item><item><title>[社交网络分析课] 数据集预处理及Gephi导入</title><link>https://mryqu.github.io/post/%E7%A4%BE%E4%BA%A4%E7%BD%91%E7%BB%9C%E5%88%86%E6%9E%90%E8%AF%BE_%E6%95%B0%E6%8D%AE%E9%9B%86%E9%A2%84%E5%A4%84%E7%90%86%E5%8F%8Agephi%E5%AF%BC%E5%85%A5/</link><pubDate>Sun, 23 Nov 2014 23:24:33 +0000</pubDate><guid>https://mryqu.github.io/post/%E7%A4%BE%E4%BA%A4%E7%BD%91%E7%BB%9C%E5%88%86%E6%9E%90%E8%AF%BE_%E6%95%B0%E6%8D%AE%E9%9B%86%E9%A2%84%E5%A4%84%E7%90%86%E5%8F%8Agephi%E5%AF%BC%E5%85%A5/</guid><description>紧赶慢赶忙完了社交网络分析课的编程大作业，选择的是经验性网络分析。
这次的大作业没有指定数据集，自己找数据集做分析。我在网上搜到以前一个同学做的移民分析，感觉很不错。然后，就茫然了。最怕这种自己找数据集的，以前有的课程介绍了一些比较好的开放数据集，可惜当时没觉得有什么太大的价值，没记呀！！！
费了半天，找了一个大不列颠的公路流量数据集，公路就是edge了，每个公路的两端就是node了，感觉还可以。数据集在线地址: http://data.dft.gov.uk/gb-traffic-matrix/Traffic-major-roads-miles.csv.数据集手册在线地址: http://data.dft.gov.uk/gb-traffic-matrix/all-traffic-data-metadata.pdf
这次作业主要使用Gephi对数据集进行分析，所以我先使用R语言对原始数据集进行预处理，然后使用Gephi导入生成的nodes.csv和edges.csv。
if (!file.exists(&amp;#34;./Traffic-major-roads-miles.csv&amp;#34;)) { download.file(&amp;#34;http://data.dft.gov.uk/gb-traffic-matrix/Traffic-major-roads-miles.csv&amp;#34;, destfile = &amp;#34;./Traffic-major-roads-miles.csv&amp;#34;) } data &amp;lt;- read.csv(&amp;#34;Traffic-major-roads-miles.csv&amp;#34;, sep = &amp;#34;,&amp;#34;) data2013 &amp;lt;- subset(data, Year == 2013 &amp;amp; AllMV &amp;gt; 0, select = c(A.Junction, B.Junction, AllMV)) data2013 &amp;lt;- data.frame(A.Junction = toupper(data2013$A.Junction), B.Junction = toupper(data2013$B.Junction), Weight = data2013$AllMV, stringsAsFactors = FALSE) A.junctions &amp;lt;- as.vector(data2013[, 1]) B.junctions &amp;lt;- as.vector(data2013[, 2]) junctions &amp;lt;- sort(unique(c(A.junctions, B.junctions))) # write nodes.csv nodes_print &amp;lt;- cbind(c(&amp;#34;Nodes&amp;#34;, junctions), c(&amp;#34;Id&amp;#34;, 1:length(junctions)), c(&amp;#34;Label&amp;#34;, junctions)) nodes_print &amp;lt;- t(nodes_print) write(nodes_print, file = &amp;#34;nodes.</description></item><item><title>在R作图系统中自定义坐标轴</title><link>https://mryqu.github.io/post/%E5%9C%A8r%E4%BD%9C%E5%9B%BE%E7%B3%BB%E7%BB%9F%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9D%90%E6%A0%87%E8%BD%B4/</link><pubDate>Tue, 15 Apr 2014 21:11:08 +0000</pubDate><guid>https://mryqu.github.io/post/%E5%9C%A8r%E4%BD%9C%E5%9B%BE%E7%B3%BB%E7%BB%9F%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9D%90%E6%A0%87%E8%BD%B4/</guid><description>在R作图系统中自定义坐标轴 R作图系统中坐标中的标签默认是等间隔，下列尝试是为了将少量数据的坐标显示在坐标轴上。
加载库并定义数据 library(lattice) library(ggplot2) library(grid) library(gridExtra) x &amp;lt;- c(1, 2, 3, 7, 8, 9) y &amp;lt;- c(1, 23, 12, 77, 14, 2) data &amp;lt;- data.frame(x = x, y = y) data ## x y ## 1 1 1 ## 2 2 23 ## 3 3 12 ## 4 7 77 ## 5 8 14 ## 6 9 2 Base作图系统 opar &amp;lt;- par(mfrow = c(1, 2), mar = c(4, 6, 4, 2)) with(data, plot(x, y, type = &amp;#34;b&amp;#34;, main = &amp;#34;Default Axis&amp;#34;)) par(las = 1) with(data, plot(x, y, type = &amp;#34;b&amp;#34;, main = &amp;#34;customised Axis&amp;#34;, xaxt = &amp;#34;n&amp;#34;, yaxt = &amp;#34;n&amp;#34;)) axis(1, data$x) axis(2, data$y) par(opar) Lattice作图系统 plot1 &amp;lt;- xyplot(y ~ x, data, type = &amp;#34;b&amp;#34;, main = &amp;#34;Default Axis&amp;#34;) plot2 &amp;lt;- xyplot(y ~ x, data, type = &amp;#34;b&amp;#34;, main = &amp;#34;customised Axis&amp;#34;, scales = list(x = list(at = unlist(data$x)), y = list(at = unlist(data$y))), las = 1) grid.</description></item></channel></rss>