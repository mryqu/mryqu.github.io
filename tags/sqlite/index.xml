<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sqlite on Mryqu&#39;s Notes</title>
    <link>https://mryqu.github.io/tags/sqlite/</link>
    <description>Recent content in Sqlite on Mryqu&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 10 Jul 2014 20:29:31 +0000</lastBuildDate>
    
	<atom:link href="https://mryqu.github.io/tags/sqlite/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>玩一下SQLite3命令</title>
      <link>https://mryqu.github.io/post/%E7%8E%A9%E4%B8%80%E4%B8%8Bsqlite3%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Thu, 10 Jul 2014 20:29:31 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/%E7%8E%A9%E4%B8%80%E4%B8%8Bsqlite3%E5%91%BD%E4%BB%A4/</guid>
      <description>SQLite介绍 SQLite是实现自包含、无需服务器、零配置和事务SQL数据库引擎的软件库。它占用资源非常低，既可以用于Windows/Linux/Unix等主流的操作系统，也广泛用于嵌入式产品中。它能够跟很多程序语言相结合，比如Tcl、C#、PHP、Java等，还有ODBC接口。 不像常见的客户-服务器范例，SQLite引擎不是个程序与之通信的独立进程，而是连接到程序中成为它的一个主要部分。所以主要的通信协议是在编程语言内的直接API调用。这在消耗总量、延迟时间和整体简单性上有积极的作用。整个数据库(定义、表、索引和数据本身)都在宿主主机上存储在一个单一的文件中。它的简单的设计是通过在开始一个事务的时候锁定整个数据文件而完成的。
SQLITE常用命令使用 SQLite命令行解释器除了支持SQL语句（大小写不敏感），还支持以.开头、大小写敏感的专有命令。SQLite网站有个帖子Command Line Shell For SQLite介绍了支持的所有命令，这里挑一些常用的玩一下。 - .help命令：给出所有命令的帮助介绍
 sqlite&amp;gt; .help   .prompt：更换提示符  sqlite&amp;gt; .prompt &amp;gt;&amp;gt; &amp;gt;&amp;gt; &amp;gt;&amp;gt;.prompt sqlite&amp;gt; sqlite&amp;gt;  .show：显示当前设置  sqlite&amp;gt;.show echo: off eqp: off explain: off headers: off mode: list nullvalue: &amp;quot;&amp;quot; output: stdout separator: &amp;quot;|&amp;quot; stats: off width:  .database：显示数据库信息  sqlite&amp;gt;.database seq name file --- --------------- ---------------------------------------------------------- 0 main E:\gitws\datasci_course_materials\assignment2\reuters.db 1 temp  .tables：显示表信息  sqlite&amp;gt;.tables Frequency  .</description>
    </item>
    
  </channel>
</rss>