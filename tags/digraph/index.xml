<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Digraph on Mryqu&#39;s Notes</title>
    <link>https://mryqu.github.io/tags/digraph/</link>
    <description>Recent content in Digraph on Mryqu&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 18 Jul 2019 20:17:16 +0000</lastBuildDate>
    
	<atom:link href="https://mryqu.github.io/tags/digraph/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[JS] 图算法实践</title>
      <link>https://mryqu.github.io/post/js_%E5%9B%BE%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Thu, 18 Jul 2019 20:17:16 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/js_%E5%9B%BE%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/</guid>
      <description>最近需要用JavaScript处理图算法，没找到适合的库，就自己写一套玩玩。
DiGraph.js 仿照Graph.java写的，实现无向图API。
(function(){ return Graph = (function () { // create empty Graph with V vertices function Graph(V) { this._V = V; this._E = 0; this._adj = []; for(var i=0;i&amp;lt;V;i++) this._adj.push([]); } Object.defineProperty(Graph.prototype, &amp;quot;V&amp;quot;, { get: function () { return this._V; }, enumerable: true, configurable: true }); Object.defineProperty(Graph.prototype, &amp;quot;E&amp;quot;, { get: function () { return this._E; }, enumerable: true, configurable: true }); // Adds the undirected edge v-w to this graph.</description>
    </item>
    
  </channel>
</rss>