<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>postgres on Mryqu's Notes</title><link>https://mryqu.github.io/tags/postgres/</link><description>Recent content in postgres on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 12 Feb 2015 20:18:53 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/tags/postgres/index.xml" rel="self" type="application/rss+xml"/><item><title>Activiti 5.17 JNDI数据源配置</title><link>https://mryqu.github.io/post/activiti_5.17_jndi%E6%95%B0%E6%8D%AE%E6%BA%90%E9%85%8D%E7%BD%AE/</link><pubDate>Thu, 12 Feb 2015 20:18:53 +0000</pubDate><guid>https://mryqu.github.io/post/activiti_5.17_jndi%E6%95%B0%E6%8D%AE%E6%BA%90%E9%85%8D%E7%BD%AE/</guid><description>Activiti演示环境采用的是h2内存数据库。为了便于研究代码，所以将其迁移到我已有的MySQL/PostgreSQL数据库上去。
MySQL MySQL配置 activiti数据库DDL文件位于activiti-engine-5.17.0.jar\org\activiti\db\create\，MySQL 5.6.4及其之后版本与之前的版本使用的是不同的DDL文件。将下列用于MySQL5.6.4+的DDL文件提取保存到某一目录下。
activiti.mysql.create.engine.sql activiti.mysql.create.identity.sql activiti.mysql.create.history.sql MySQL命令如下：
create database ActivitiDB character set utf8 collate utf8_general_ci; use ActivitiDB; source c:/activiti.mysql.create.engine.sql; source c:/activiti.mysql.create.identity.sql; source c:/activiti.mysql.create.history.sql; Tomcat配置 删除下列MyBatis配置文件：
apache-tomcat-7\webapps\activiti-explorer\WEB-INF\classes\db.properties apache-tomcat-7\webapps\activiti-rest\WEB-INF\classes\db.properties 修改下列Spring配置文件：
apache-tomcat-7\webapps\activiti-explorer\WEB-INF\classes\activiti-custom-context.xml apache-tomcat-7\webapps\activiti-rest\WEB-INF\classes\activiti-custom-context.xml 去掉XMl注释，删除&amp;quot;dbProperties&amp;quot;bean，将&amp;quot;dataSource&amp;quot;bean改成JNDI数据源。 修改下列Tomcat上下文，配置Tomcat JNDI资源：
apache-tomcat-7\webapps\activiti-explorer\META-INF\context.xml apache-tomcat-7\webapps\activiti-rest\META-INF\context.xml PostgreSQL PostgreSQL配置 activiti数据库DDL文件位于activiti-engine-5.17.0.jar\org\activiti\db\create\，将下列用于PostgreSQL的DDL文件提取保存到某一目录下。
activiti.postgres.create.engine.sql activiti.postgres.create.identity.sql activiti.postgres.create.history.sql PostgreSQL命令如下：
CREATE DATABASE ActivitiDB WITH ENCODING &amp;#39;UTF8&amp;#39; TEMPLATE=template0; \c ActivitiDB; \i c:/activiti.postgres.create.engine.sql; \i c:/activiti.postgres.create.identity.sql; \i c:/activiti.postgres.create.history.sql; Tomcat配置 删除下列MyBatis配置文件：
apache-tomcat-7\webapps\activiti-explorer\WEB-INF\classes\db.properties apache-tomcat-7\webapps\activiti-rest\WEB-INF\classes\db.properties 修改下列Spring配置文件：
apache-tomcat-7\webapps\activiti-explorer\WEB-INF\classes\activiti-custom-context.xml apache-tomcat-7\webapps\activiti-rest\WEB-INF\classes\activiti-custom-context.xml 去掉XMl注释，删除&amp;quot;dbProperties&amp;quot;bean，将&amp;quot;dataSource&amp;quot;bean改成JNDI数据源。 修改下列Tomcat上下文，配置Tomcat JNDI资源：
apache-tomcat-7\webapps\activiti-explorer\META-INF\context.xml apache-tomcat-7\webapps\activiti-rest\META-INF\context.</description></item><item><title>MySQL、Postgres、Oracle、SQL server、DB2、Teradata、Netezza数据类型比较</title><link>https://mryqu.github.io/post/mysqlpostgresoraclesql_serverdb2teradatanetezza%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83/</link><pubDate>Mon, 24 Jun 2013 20:49:03 +0000</pubDate><guid>https://mryqu.github.io/post/mysqlpostgresoraclesql_serverdb2teradatanetezza%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83/</guid><description>mysqlpostgresoraclemssqldb2teredatanetezzabigint8bytes
-9223372036854775808~9223372036854775807
0~184467440737095516158bytes
-9223372036854775808~9223372036854775807Not support8bytes
-9223372036854775808~92233720368547758078bytes (precision of 19digits)
-9223372036854775808~92233720368547758078bytes
-9223372036854775808~92233720368547758078bytes
-9223372036854775808~9223372036854775807decimal(m,n)65digits
64: MySQL 5.0.3~5.0.5
8?: MySQL 5.0.3 beforeno limit?
1000digits?m:1 ~38
n:-84~127.m:1 ~38
n:0~m1~31digitsm:1~18m:1 ~38
n:0~mnumeric=decimalnumeric=decimalnumeric=decimalnumeric=decimalnumeric=decimalinteger4bytes
-2147483648~2147483647
0~42949672954bytes
-2147483648~2147483647INTEGER=NUMBER(38)
int
4bytes
-2147483648~21474836474bytes (precision of 10digits)
-2147483648~21474836474bytes
-2147483648~21474836474bytes
-2147483648~2147483647varchar(n)0~255characters : MySQLbefore
0~65,535characters : MySQL 5.0.3 and above
unlimited lengthvarchar2(n)
4000 bytes800032672bytes64000 bytes64000 characterschar(n)0~255characters?&amp;nbsp;unlimited length2000 bytes80001~25464000 bytes64000 characterstextTINYTEXT:255(2^8)bytes
TEXT:65535(2^16)bytes
MEDIUMTEXT:16777215 (2^24)bytes
LONGTEXT:4294967295 (2^32)bytesunlimited lengthCLOB: (4 gigabytes - 1) * (database block size).</description></item></channel></rss>