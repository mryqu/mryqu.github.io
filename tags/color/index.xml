<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>color on Mryqu's Notes</title><link>https://mryqu.github.io/tags/color/</link><description>Recent content in color on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 26 Nov 2020 08:25:00 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/tags/color/index.xml" rel="self" type="application/rss+xml"/><item><title>Shell显示彩色文字</title><link>https://mryqu.github.io/post/shell%E6%98%BE%E7%A4%BA%E5%BD%A9%E8%89%B2%E6%96%87%E5%AD%97/</link><pubDate>Thu, 26 Nov 2020 08:25:00 +0000</pubDate><guid>https://mryqu.github.io/post/shell%E6%98%BE%E7%A4%BA%E5%BD%A9%E8%89%B2%E6%96%87%E5%AD%97/</guid><description>昨天学习一下如何使用shell在屏幕显示彩色文字。解决方案有两种：1. 转义字符 2. tput设置文本颜色。
在Linux上这两种方式都正常工作，在FreeBSD上第二种方式不起作用。
代码如下：
#!/bin/ksh println() { printf &amp;#34;%s\n&amp;#34; $* } ########################## # Solution 1 ########################## colorsEnabled() { if [ $TERM == &amp;#39;TERM&amp;#39; ] then return 0 fi return 1 } printlnColor() { c=$1 shift msg=$*; colorsEnabled if [ $? == 1 ] then printf &amp;#34;\033[0;%dm%s\033[0m\n&amp;#34; $c &amp;#34;$msg&amp;#34; else printf &amp;#34;%s\n&amp;#34; &amp;#34;$msg&amp;#34; fi } # Success printlnSuccess() { printlnColor 32 $* } # Warning printlnWarning() { printlnColor 33 $* } # Failure printlnFailure() { printlnColor 31 $* } # Verbose printlnVerbose() { printlnColor 35 $* } # Emphasis printlnEmphasis() { printlnColor 36 $* } # Note printlnNote() { printlnColor 37 $* } ########################## # Solution 2 ########################## println_color() { c=$1 shift msg=$*; tput setaf $c printf &amp;#34;%s\n&amp;#34; &amp;#34;$msg&amp;#34; tput sgr0 } # Success println_success() { println_color 2 $* } # Warning println_warning() { println_color 3 $* } # Failure println_failure() { println_color 1 $* } # Verbose println_verbose() { println_color 5 $* } # Emphasis println_emphasis() { println_color 6 $* } # Note println_note() { println_color 7 $* } printlnEmphasis hahaha 123 echo &amp;#34;=====================&amp;#34; println_emphasis hahaha 123 参考 ANSI Escape sequences Git shell coloring · GitHub tput</description></item></channel></rss>