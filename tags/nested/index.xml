<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nested on Mryqu's Notes</title><link>https://mryqu.github.io/tags/nested/</link><description>Recent content in nested on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 28 Jun 2013 16:16:14 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/tags/nested/index.xml" rel="self" type="application/rss+xml"/><item><title>嵌套的动态GemFire region研究</title><link>https://mryqu.github.io/post/gemfire_nesting-dynamic-region/</link><pubDate>Fri, 28 Jun 2013 16:16:14 +0000</pubDate><guid>https://mryqu.github.io/post/gemfire_nesting-dynamic-region/</guid><description>研究目的和结论 研究多级动态region是否可行，结论可行 研究嵌套region(一个region是另一个region的值)是否可行，结论可行 Java代码 import java.util.Set; import com.gemstone.gemfire.cache.Cache; import com.gemstone.gemfire.cache.CacheFactory; import com.gemstone.gemfire.cache.DynamicRegionFactory; import com.gemstone.gemfire.cache.Region; public class EmbededDynamicRegion { public static void main(String[] args) { System.out.println(&amp;#34;\nConnecting to the distributed system and creating the cache.&amp;#34;); Cache cache = null; try { // Create the cache which causes the cache-xml-file to be parsed cache = new CacheFactory().set(&amp;#34;name&amp;#34;, &amp;#34;yqu_test_cache&amp;#34;) .set(&amp;#34;cache-xml-file&amp;#34;, &amp;#34;xml/YquTest.xml&amp;#34;).create(); // Get the exampleRegion Region yquRegion = cache.getRegion(&amp;#34;yqu_region&amp;#34;); printRegionFullPath(yquRegion); DynamicRegionFactory dynRegFactory = DynamicRegionFactory.get(); for(int i=0;i&amp;lt;3;i++) { Region keyRegion = dynRegFactory.</description></item></channel></rss>