<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>utf8 on Mryqu's Notes</title><link>https://mryqu.github.io/tags/utf8/</link><description>Recent content in utf8 on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 24 Oct 2013 20:31:28 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/tags/utf8/index.xml" rel="self" type="application/rss+xml"/><item><title>[C] GCC对UTF8 BOM的支持</title><link>https://mryqu.github.io/post/c_gcc%E5%AF%B9utf8_bom%E7%9A%84%E6%94%AF%E6%8C%81/</link><pubDate>Thu, 24 Oct 2013 20:31:28 +0000</pubDate><guid>https://mryqu.github.io/post/c_gcc%E5%AF%B9utf8_bom%E7%9A%84%E6%94%AF%E6%8C%81/</guid><description>最近玩些特俗字符，结果对yqutest.cpp源码文件编译时先碰到error:converting to execution character set: Illegal bytesequence错误。GCC的源码字符集与执行字符集默认是UTF-8编码，为了避免源码文件乱码，最好也是采用UTF-8编码来存储源码文件。将源码编码转成UTF-8，问题得以解决。 但是否需要UTF-8 BOM(byte-order mark)呢？ 我一时兴起添加了BOM，十六进制为EF BB BF，即对应八进制的357 273 277，编译结果如下：
mryqu&amp;gt; g++ yqutest.cpp -o yqutst123 yqutest.cpp:1: error: stray &amp;#39;\357&amp;#39; in program yqutest.cpp:1: error: stray &amp;#39;\273&amp;#39; in program yqutest.cpp:1: error: stray &amp;#39;\277&amp;#39; in program yqutest.cpp:1: error: stray &amp;#39;#&amp;#39; in program yqutest.cpp:1: error: expected constructor, destructor, or type conversion before &amp;#39;&amp;lt;&amp;#39; token mryqu&amp;gt; g++ -v Using built-in specs. Target: amd64-undermydesk-freebsd Configured with: FreeBSD/amd64 system compiler Thread model: posix gcc version 4.</description></item></channel></rss>