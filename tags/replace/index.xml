<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Replace on Mryqu&#39;s Notes</title>
    <link>https://mryqu.github.io/tags/replace/</link>
    <description>Recent content in Replace on Mryqu&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 16 Aug 2015 07:22:40 +0000</lastBuildDate>
    
	<atom:link href="https://mryqu.github.io/tags/replace/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[OpenUI5] 加载时替换JavaScript源文件</title>
      <link>https://mryqu.github.io/post/openui5_%E5%8A%A0%E8%BD%BD%E6%97%B6%E6%9B%BF%E6%8D%A2javascript%E6%BA%90%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sun, 16 Aug 2015 07:22:40 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/openui5_%E5%8A%A0%E8%BD%BD%E6%97%B6%E6%9B%BF%E6%8D%A2javascript%E6%BA%90%E6%96%87%E4%BB%B6/</guid>
      <description>我有一些自己定制的OpenUI5控件，有时会修改某个方法内的逻辑，这个好处理，在ChromedevTool直接修改加载后JS代码并保存就可以直接调试。如果修改了property、aggregation或者init方法内的逻辑的话，由于错过了初始化就不灵了，而重新加载的话又丢失了自己新加的调试代码。
我的解决方法如下： - 清除Chrome缓存 - 在sap-ui-core-dbg.js里requireModule方法内设置断点，设置断点条件为response.indexOf(&amp;ldquo;Dialog.extend(\&amp;ldquo;mryqu.test.control.KexiaoDialog&amp;rdquo;)&amp;gt;0这样当OpenUI5加载KexiaoDialog.js文件时就会触发断点。 - 重新加载我的OpenUI5项目：http://www.mryqu.com/test123/?sap-ui-debug=true&amp;amp;sap-ui-preload=false - 当断点被触发时，在Console执行：
 response=&#39;(function ()\n\ {\n\ &amp;quot;use strict&amp;quot;;\n\ \n\ jQuery.sap.require(&amp;quot;sap.m.Button&amp;quot;);\n\ jQuery.sap.require(&amp;quot;sap.m.Dialog&amp;quot;);\n\ jQuery.sap.require(&amp;quot;sap.m.HBox&amp;quot;);\n\ jQuery.sap.require(&amp;quot;sap.m.Input&amp;quot;);\n\ jQuery.sap.require(&amp;quot;sap.m.RadioButton&amp;quot;);\n\ jQuery.sap.require(&amp;quot;sap.m.VBox&amp;quot;);\n\ jQuery.sap.require(&amp;quot;sap.m.Text&amp;quot;);\n\ \n\ var Button = sap.m.Button;\n\ var Dialog = sap.m.Dialog;\n\ var HBox = sap.m.HBox;\n\ var Icon = sap.ui.core.Icon;\n\ var Input = sap.m.Input;\n\ var RadioButton = sap.m.RadioButton;\n\ var Text = sap.m.Text;\n\ var VBox = sap.m.VBox;\n\ \n\ Dialog.extend(&amp;quot;mryqu.test.control.KexiaoDialog&amp;quot;, {\n\ metadata: {\n\ properties: {\n\ &amp;quot;tableName&amp;quot; : {type : &amp;quot;string&amp;quot;, defaultValue : &amp;quot;&amp;quot;},\n\ },\n\ associations: {\n\ invoker: {type: &amp;quot;sap.</description>
    </item>
    
  </channel>
</rss>