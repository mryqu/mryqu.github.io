<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>db2 on Mryqu's Notes</title><link>https://mryqu.github.io/tags/db2/</link><description>Recent content in db2 on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 24 Jun 2013 20:49:03 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/tags/db2/index.xml" rel="self" type="application/rss+xml"/><item><title>MySQL、Postgres、Oracle、SQL server、DB2、Teradata、Netezza数据类型比较</title><link>https://mryqu.github.io/post/mysqlpostgresoraclesql_serverdb2teradatanetezza%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83/</link><pubDate>Mon, 24 Jun 2013 20:49:03 +0000</pubDate><guid>https://mryqu.github.io/post/mysqlpostgresoraclesql_serverdb2teradatanetezza%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83/</guid><description>mysqlpostgresoraclemssqldb2teredatanetezzabigint8bytes
-9223372036854775808~9223372036854775807
0~184467440737095516158bytes
-9223372036854775808~9223372036854775807Not support8bytes
-9223372036854775808~92233720368547758078bytes (precision of 19digits)
-9223372036854775808~92233720368547758078bytes
-9223372036854775808~92233720368547758078bytes
-9223372036854775808~9223372036854775807decimal(m,n)65digits
64: MySQL 5.0.3~5.0.5
8?: MySQL 5.0.3 beforeno limit?
1000digits?m:1 ~38
n:-84~127.m:1 ~38
n:0~m1~31digitsm:1~18m:1 ~38
n:0~mnumeric=decimalnumeric=decimalnumeric=decimalnumeric=decimalnumeric=decimalinteger4bytes
-2147483648~2147483647
0~42949672954bytes
-2147483648~2147483647INTEGER=NUMBER(38)
int
4bytes
-2147483648~21474836474bytes (precision of 10digits)
-2147483648~21474836474bytes
-2147483648~21474836474bytes
-2147483648~2147483647varchar(n)0~255characters : MySQLbefore
0~65,535characters : MySQL 5.0.3 and above
unlimited lengthvarchar2(n)
4000 bytes800032672bytes64000 bytes64000 characterschar(n)0~255characters?&amp;nbsp;unlimited length2000 bytes80001~25464000 bytes64000 characterstextTINYTEXT:255(2^8)bytes
TEXT:65535(2^16)bytes
MEDIUMTEXT:16777215 (2^24)bytes
LONGTEXT:4294967295 (2^32)bytesunlimited lengthCLOB: (4 gigabytes - 1) * (database block size).</description></item><item><title>数据库常用操作笔记</title><link>https://mryqu.github.io/post/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%AC%94%E8%AE%B0/</link><pubDate>Sat, 18 Aug 2012 07:10:28 +0000</pubDate><guid>https://mryqu.github.io/post/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%AC%94%E8%AE%B0/</guid><description>GreenPlum/PostGreSQL操作 Create a new database: createdb medb Drop database: dropdb medb Access database: psql -h gpserver -d gpdatabase -U gpuser -W Get help: medb=# \h Quit: medb=# \q Read command from file: medb=# \i input.sql To dump a database: pg_dump medb &amp;gt; db.out To reload the database: psql -d database -f db.out Dump all database: pg_dumpall &amp;gt; /var/lib/pgsql/backups/dumpall.sql Restore database: psql -f /var/lib/pgsql/backups/dumpall.sql medb Show databases: psql -l medb=# \l; Show users: medb=# select * from &amp;quot;pg_user&amp;quot;; Show tables: medb=# select * from &amp;quot;pg_tables&amp;quot;; Set password: medb=# upadte pg_shadow set passwd = 'new_password' where usename = 'username'; Clean all databases (Should be done via a daily cron): vacuumdb --quiet --all check column of table medb=# select * from INFORMATION_SCHEMA.</description></item></channel></rss>