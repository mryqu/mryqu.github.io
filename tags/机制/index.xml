<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>机制 on Mryqu&#39;s Notes</title>
    <link>https://mryqu.github.io/tags/%E6%9C%BA%E5%88%B6/</link>
    <description>Recent content in 机制 on Mryqu&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 28 Feb 2015 19:28:15 +0000</lastBuildDate>
    
	<atom:link href="https://mryqu.github.io/tags/%E6%9C%BA%E5%88%B6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Activiti Modeler中sid生成机制</title>
      <link>https://mryqu.github.io/post/activiti_modeler%E4%B8%ADsid%E7%94%9F%E6%88%90%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Sat, 28 Feb 2015 19:28:15 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/activiti_modeler%E4%B8%ADsid%E7%94%9F%E6%88%90%E6%9C%BA%E5%88%B6/</guid>
      <description>昨天跟同事说Activiti Modeler中的sid比GoJS中的元素ID讲究，估计是由时戳和随机数混合生成的。 今天看了一下，发现原来就是一个纯随机数。
[tomcat]\webapps\activiti-explorer\editor-app\editor.html里对类为stencil-item的HTML元素设置的拖拽处理函数在[tomcat]\webapps\activiti-explorer\editor-app\stencil-controller.js中定义。 sid生成方法在[tomcat]\webapps\activiti-explorer\editor-app\editor\oryx.debug.js中定义。
ORYX.Editor.provideId = function() { var res=[], hex=&#39;0123456789ABCDEF&#39;; for(var i=0; i&amp;lt;36; i ) res[i]=Math.floor(Math.random()*0x10); res[14]=4; res[19]=(res[19] &amp;amp; 0x3) | 0x8; for(var i=0; i&amp;lt;36; i ) res[i] = hex[res[i]]; res[8] = res[13] = res[18] = res[23] = &#39;-&#39;; return &amp;quot;sid-&amp;quot; res.join(&#39;&#39;); };  当然，GoJSBPMN样例中的ID就更简单的不得了，全都是预定义的简单数字。例如，userTask的key预定义为7，当一个BPMN元素加入GoJSmodel时，GoJS会让model中的key变成唯一的（代码混淆过，我猜估计没混淆前叫makeUniqueKeyFunction）。在我的小测试中，第一个userTask的key仍然为7，第二个userTask的key被改成了-3。 感觉要是借鉴MongoDB的ObjectId生成机制，ID的冲撞概率可能会更低。</description>
    </item>
    
  </channel>
</rss>