<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>post on Mryqu's Notes</title><link>https://mryqu.github.io/tags/post/</link><description>Recent content in post on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 01 Apr 2017 06:17:43 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/tags/post/index.xml" rel="self" type="application/rss+xml"/><item><title>[MySQL] 将空返回值转换成NULL</title><link>https://mryqu.github.io/post/mysql_%E5%B0%86%E7%A9%BA%E8%BF%94%E5%9B%9E%E5%80%BC%E8%BD%AC%E6%8D%A2%E6%88%90null/</link><pubDate>Sat, 01 Apr 2017 06:17:43 +0000</pubDate><guid>https://mryqu.github.io/post/mysql_%E5%B0%86%E7%A9%BA%E8%BF%94%E5%9B%9E%E5%80%BC%E8%BD%AC%E6%8D%A2%E6%88%90null/</guid><description>当MySQL没有搜索到任何匹配行时，会返回空返回值，如何转换成NULL呢？
方法一 select (original_select_statement) as Alias 这种方法仅对一个单值有效，即：
原语句返回单值，该值将被返回 原语句返回单列零行，将返回NULL 原语句返回多列或多行，查询失败 方法二 使用IFNULL或COALESCE函数。</description></item><item><title>[C++]获取Facebook帖子生成的SAS时间</title><link>https://mryqu.github.io/post/c++_%E8%8E%B7%E5%8F%96facebook%E5%B8%96%E5%AD%90%E7%94%9F%E6%88%90%E7%9A%84sas%E6%97%B6%E9%97%B4/</link><pubDate>Sat, 20 Feb 2016 06:13:22 +0000</pubDate><guid>https://mryqu.github.io/post/c++_%E8%8E%B7%E5%8F%96facebook%E5%B8%96%E5%AD%90%E7%94%9F%E6%88%90%E7%9A%84sas%E6%97%B6%E9%97%B4/</guid><description>写了一个小代码分析Facebook帖子生成时间字符串，将其解析成SAS时间。 简而言之，time_t存储的是距00:00:00, Jan 1, 1970 UTC的秒数（epoch），其中tm_year存储的是当前年数减去1900；而SAS时间起始点为00:00:00, Jan 1, 1960UTC；转换主要使用difftime获取两者的时间差。
代码如下：
参考 C++: time_t C++: time C++: gmtime</description></item><item><title>Facebook Graph API之我的常用URL笔记</title><link>https://mryqu.github.io/post/facebook_graph_api%E4%B9%8B%E6%88%91%E7%9A%84%E5%B8%B8%E7%94%A8url%E7%AC%94%E8%AE%B0/</link><pubDate>Fri, 08 Jan 2016 06:20:20 +0000</pubDate><guid>https://mryqu.github.io/post/facebook_graph_api%E4%B9%8B%E6%88%91%E7%9A%84%E5%B8%B8%E7%94%A8url%E7%AC%94%E8%AE%B0/</guid><description>获取Facebook主页Id https://graph.facebook.com/v2.5/SasSoftware?access_token={accessToken}&amp;amp;format=json 上面示例是通过主页名SasSoftware获取其主页Id。
获取Facebook主页帖子 https://graph.facebook.com/v2.5/{pageId}/feed?limit=100&amp;amp;format=json&amp;amp;include_hidden=true&amp;amp;access_token={accessToken}&amp;amp;since=2015-01-01&amp;amp;util=2015-12-31 https://graph.facebook.com/{pageId}/feed?limit=100&amp;amp;format=json&amp;amp;include_hidden=true&amp;amp;access_token={accessToken}&amp;amp;since=1420041660&amp;amp;util=1422634320 https://graph.facebook.com/v2.0/{pageId}/feed?limit=100&amp;amp;format=json&amp;amp;include_hidden=true&amp;amp;access_token={accessToken}&amp;amp;since=1420041660&amp;amp;util=1422634320 通过Facebook Graph API 2.5或不带版本的API仅能获取帖子的Id、创建时间和帖子内容，而FacebookGraph API 2.0则可以获得更多内容。
获取Facebook帖子的评论信息 https://graph.facebook.com/{postId}/comments?limit=100&amp;amp;format=json&amp;amp;include_hidden=true&amp;amp;access_token={accessToken}
获取Facebook帖子的点赞信息 https://graph.facebook.com/{postId}/likes?limit=100&amp;amp;format=json&amp;amp;include_hidden=true&amp;amp;summary=true&amp;amp;access_token={accessToken}</description></item><item><title>Facebook Graph API之message_tags</title><link>https://mryqu.github.io/post/facebook_graph_api%E4%B9%8Bmessage_tags/</link><pubDate>Tue, 05 Jan 2016 06:38:10 +0000</pubDate><guid>https://mryqu.github.io/post/facebook_graph_api%E4%B9%8Bmessage_tags/</guid><description>message_tag是Facebook帖子和评论中消息标记的设置档，包括标记ID、文本、类型、偏移和长度。 今天才注意到Facebook帖子（Post）中message_tag是一个JSON对象，而评论（Comment）中message_tag是一个JSON数组。
帖子中的message_tag是这个样子的：
&amp;#34;message_tags&amp;#34;: { &amp;#34;88&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;168597536563870&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;IBM&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;page&amp;#34;, &amp;#34;offset&amp;#34;: 88, &amp;#34;length&amp;#34;: 3 } ], &amp;#34;93&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;241760048297&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Fidelity Investments&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;page&amp;#34;, &amp;#34;offset&amp;#34;: 93, &amp;#34;length&amp;#34;: 20 } ], &amp;#34;115&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;145619362306025&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;ABB&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;page&amp;#34;, &amp;#34;offset&amp;#34;: 115, &amp;#34;length&amp;#34;: 3 } ], &amp;#34;120&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;252467906271&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Quintiles&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;page&amp;#34;, &amp;#34;offset&amp;#34;: 120, &amp;#34;length&amp;#34;: 9 } ], &amp;#34;131&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;193453547355388&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;SAS Software&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;page&amp;#34;, &amp;#34;offset&amp;#34;: 131, &amp;#34;length&amp;#34;: 12 } ], &amp;#34;161&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;702317053131576&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Duke Energy&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;page&amp;#34;, &amp;#34;offset&amp;#34;: 161, &amp;#34;length&amp;#34;: 11 } ], &amp;#34;174&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;313176732094295&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Toshiba Global Commerce Solutions&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;page&amp;#34;, &amp;#34;offset&amp;#34;: 174, &amp;#34;length&amp;#34;: 33 } ], &amp;#34;209&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;20531316728&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Facebook&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;page&amp;#34;, &amp;#34;offset&amp;#34;: 209, &amp;#34;length&amp;#34;: 8 } ] } 评论中的message_tag是这个样子的：</description></item><item><title>MySQL:清空具有外键约束的表</title><link>https://mryqu.github.io/post/mysql%E6%B8%85%E7%A9%BA%E5%85%B7%E6%9C%89%E5%A4%96%E9%94%AE%E7%BA%A6%E6%9D%9F%E7%9A%84%E8%A1%A8/</link><pubDate>Wed, 20 Nov 2013 20:30:18 +0000</pubDate><guid>https://mryqu.github.io/post/mysql%E6%B8%85%E7%A9%BA%E5%85%B7%E6%9C%89%E5%A4%96%E9%94%AE%E7%BA%A6%E6%9D%9F%E7%9A%84%E8%A1%A8/</guid><description>最近在MySQL Workbench上使用&amp;quot;TRUNCATE TABLE TABLE_E;&amp;ldquo;清空一个表时返回错误：Error Code: 1701. Cannot truncate a table referenced in a foreignkey constraint (yqutesting.table_f, CONSTRAINT table_f_ibfk_4FOREIGN KEY (old_id) REFERENCES yqutesting.table_e(ID))解决方法1:
删除约束 清空表 手工删除引用该表的记录 创建约束解决方法2: SET FOREIGN_KEY_CHECKS = 0; TRUNCATE TABLE TABLE_E; SET FOREIGN_KEY_CHECKS = 1; 参考: truncate foreign key constrained table</description></item></channel></rss>