<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>国际化 on Mryqu's Notes</title><link>https://mryqu.github.io/tags/%E5%9B%BD%E9%99%85%E5%8C%96/</link><description>Recent content in 国际化 on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 10 Apr 2015 05:50:49 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/tags/%E5%9B%BD%E9%99%85%E5%8C%96/index.xml" rel="self" type="application/rss+xml"/><item><title>GoJS国际化和本地化支持</title><link>https://mryqu.github.io/post/gojs%E5%9B%BD%E9%99%85%E5%8C%96%E5%92%8C%E6%9C%AC%E5%9C%B0%E5%8C%96%E6%94%AF%E6%8C%81/</link><pubDate>Fri, 10 Apr 2015 05:50:49 +0000</pubDate><guid>https://mryqu.github.io/post/gojs%E5%9B%BD%E9%99%85%E5%8C%96%E5%92%8C%E6%9C%AC%E5%9C%B0%E5%8C%96%E6%94%AF%E6%8C%81/</guid><description>查了一下GoJS国际化支持文档，藏的还挺深，放在GoJS 部署里了。
GoJS应用可以显示非拉丁语文本。示例可见Japanese Family Tree. GoJS不操作货币值、日期值或地址，因此对这些数据类型没有本地化问题；GoJS不包含任何自己的图标（图像）或光标。 GoJS不显示任何内建文本字符串，因此无需转换工作。用于往控制台输出的错误和告警消息仅用于程序员调试，而不会面向最终用户。当读写JSON、几何路径字符串或CSS颜色时，其中的数值读写仅用于内部使用且为非本地化格式。 所有用户可见文本都完全在程序员的控制之下。为了本地化，可以很方便地使用Binding中的转换函数。TextEditingTool使用HTMLTextArea元素实现原地文本输入和编辑，从而利用浏览器对输入法编辑器的支持。
GoJS不像OpenUI5那样根据Locale相应从I18Nproperties文件获取本地化文本，而是通过下列方式提供国际化和本地化支持：
提供显示非拉丁语文本的能力 将自身摘出来，确保自身实现没有国际化和本地化的要求 将一切国际化的工作推出去，程序员可以直接设置国际化显示文本，也可以实现Binding(targetprop,sourceprop, conv)中的转换工具方法在客户端进行本地化。</description></item></channel></rss>