<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on Mryqu&#39;s Notes</title>
    <link>https://mryqu.github.io/categories/kubernetes/</link>
    <description>Recent content in Kubernetes on Mryqu&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 13 Jun 2019 06:12:34 +0000</lastBuildDate>
    
	<atom:link href="https://mryqu.github.io/categories/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>学习使用Minikube</title>
      <link>https://mryqu.github.io/post/%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8minikube/</link>
      <pubDate>Thu, 13 Jun 2019 06:12:34 +0000</pubDate>
      
      <guid>https://mryqu.github.io/post/%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8minikube/</guid>
      <description>在管理容器化应用方面，Kubernetes是目前最好的工具之一。而Minikube能够在macOS、Linux和Windows平台上实现一个本地Kubernetes集群，用于Kubernetes的学习。
Minikube是由Go语言实现，当前支持如下Kubernetes特性：
- DNS
- NodePort
- ConfigMap和Secret
- 仪表盘
- 容器运行时: Docker、rkt、CRI-O和containerd
- 使能容器网络接口
- Ingres
由上图可知，要使用Minikube，需要安装Minikube、kubectl和虚拟机。好在有Katacoda提供免费的浏览器内的Kubernetes环境，省却了安装这一步骤。
按照Kubernetes的Hello Minikube教程走了一遍。
minikube version; minikube start $ $ minikube version; minikube start minikube version: v0.28.2 Starting local Kubernetes v1.10.0 cluster... Starting VM... Getting VM IP address... Moving files into cluster... Setting up certs... Connecting to cluster... Setting up kubeconfig... Starting cluster components... Kubectl is now configured to use the cluster. Loading cached images from config file.</description>
    </item>
    
  </channel>
</rss>