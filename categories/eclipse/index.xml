<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Eclipse on Mryqu's Notes</title><link>https://mryqu.github.io/categories/eclipse/</link><description>Recent content in Eclipse on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 30 Oct 2015 05:49:54 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/categories/eclipse/index.xml" rel="self" type="application/rss+xml"/><item><title>[Eclipse] 遭遇Unable to install breakpoint due to missing line number attribute</title><link>https://mryqu.github.io/post/eclipse_%E9%81%AD%E9%81%87unable_to_install_breakpoint_due_to_missing_line_number_attribute/</link><pubDate>Fri, 30 Oct 2015 05:49:54 +0000</pubDate><guid>https://mryqu.github.io/post/eclipse_%E9%81%AD%E9%81%87unable_to_install_breakpoint_due_to_missing_line_number_attribute/</guid><description>今天遇到了“Unable to install breakpoint due to missing line numberattribute. Modify compiler options to generate line numberattributes”问题。 检查Preferences -&amp;gt; Java -&amp;gt; Perference，&amp;ldquo;Add linenumber attributes to generated class files (used by thedebugger)&amp;ldquo;已经勾选了。 应该是SpringAOP产生的代码没有行数信息，但是我自己写的代码还是带行数信息的，因此虽然会弹出这些烦人的警告，所设断点还是其作用的。让它不再提示即可。</description></item><item><title>[Eclipse] 确认Eclipse是32/64bit的方法</title><link>https://mryqu.github.io/post/eclipse_%E7%A1%AE%E8%AE%A4eclipse%E6%98%AF32%E6%88%9664bit%E7%9A%84%E6%96%B9%E6%B3%95/</link><pubDate>Sat, 26 Oct 2013 22:19:41 +0000</pubDate><guid>https://mryqu.github.io/post/eclipse_%E7%A1%AE%E8%AE%A4eclipse%E6%98%AF32%E6%88%9664bit%E7%9A%84%E6%96%B9%E6%B3%95/</guid><description>两种方法：
打开Eclipse界面：Help -&amp;gt; About Eclipse -&amp;gt; Installation Details -&amp;gt; Configuration，若看到x86字样说明Eclipse是32bit的，若看到x86_64或x64字样则说明Eclipse是64bit的。 查看Eclipse安装目录下的eclipse.ini文件，如果launcher.library设置的值中写的是X86就说明Eclipse是32bit的，如果写的是x86_64或x64则说明Eclipse是64bit的。</description></item><item><title>[Eclipse] Find the override method implementation in subclasses</title><link>https://mryqu.github.io/post/eclipse_find_the_override_method_implementation_in_subclasses/</link><pubDate>Sat, 26 Oct 2013 00:00:39 +0000</pubDate><guid>https://mryqu.github.io/post/eclipse_find_the_override_method_implementation_in_subclasses/</guid><description>已知当前对象为org.apache.hadoop.hdfs.client.HdfsDataInputStream实例，调用其祖宗抽象类java.io.InputStream的publicint read(byte b[], int off, int len) throwsIOException方法，究竟最后使用的是那个类的实现呢？ 由如上类继承图可知，应该从对象类往上依次查找方法实现：HdfsDataInputStream、FSDataInputStream、&amp;hellip;&amp;hellip;。工作很繁琐，挑战眼力！
一个快捷的方式就是进入java.io.InputStream类，选中read(byte b[], int off, intlen) 方法，按住CTRL键后点击鼠标左键，这样会出现一个菜单： 选择OpenImplementation菜单，输入HdfsDataInputStream、FSDataInputStream、&amp;hellip;&amp;hellip;，可以更轻松的找到重写该方法的子类。 最终可知使用的是java.io.DataInputStream类中的实现：
public final int read(byte b[], int off, int len) throws IOException { return in.read(b, off, len); }</description></item><item><title>Eclipse中解决远程调试超时的设置</title><link>https://mryqu.github.io/post/eclipse%E4%B8%AD%E8%A7%A3%E5%86%B3%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95%E8%B6%85%E6%97%B6%E7%9A%84%E8%AE%BE%E7%BD%AE/</link><pubDate>Fri, 07 Sep 2012 20:55:16 +0000</pubDate><guid>https://mryqu.github.io/post/eclipse%E4%B8%AD%E8%A7%A3%E5%86%B3%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95%E8%B6%85%E6%97%B6%E7%9A%84%E8%AE%BE%E7%BD%AE/</guid><description>主要是加大调试器超时和启动超时设置 Tomcat设置 catalina.bat中添加如下：
:doStart shift if &amp;#34;%TITLE%&amp;#34; == &amp;#34;&amp;#34; set TITLE=Tomcat set _EXECJAVA=start &amp;#34;%TITLE%&amp;#34; %_RUNJAVA% set CATALINA_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=5558,server=y,suspend=n if not &amp;#34;&amp;#34;%1&amp;#34;&amp;#34; == &amp;#34;&amp;#34;-security&amp;#34;&amp;#34; goto execCmd shift echo Using Security Manager set &amp;#34;SECURITY_POLICY_FILE=%CTALINA_BASE%\conf\catalina.policy&amp;#34; goto execCmd Eclipse设置</description></item></channel></rss>