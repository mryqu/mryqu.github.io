<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NetWork on Mryqu's Notes</title><link>https://mryqu.github.io/categories/network/</link><description>Recent content in NetWork on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 15 Sep 2015 06:15:18 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/categories/network/index.xml" rel="self" type="application/rss+xml"/><item><title>Postman使用笔记</title><link>https://mryqu.github.io/post/postman%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</link><pubDate>Tue, 15 Sep 2015 06:15:18 +0000</pubDate><guid>https://mryqu.github.io/post/postman%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</guid><description>以前用过cURL和rest-shell进行RESTAPI测试，最近偶然看到了Postman。Postman是一款Chrome插件，强大、便利，可以在浏览器里直接测试RESTAPI。
安装 在Chrome浏览器里进入Postman插件安装地址即可安装Postman。 使用 Postman可以模拟各种Http请求，并且可以额外设置特殊的URL参数、Http头以及Basic Auth、DigestAuth、OAuth 1.0等认证信息。在展现Http响应上，Postman支持完美打印，JSON、XML或是HTML都会整理成人类阅读的格式，有助于我们更清楚地查看响应内容。
特色功能 更多的Http方法：Postman除了支持GET、POST、PUT、PATCH、DELETE、HEAD、OPTIONS这些常用Http方法，还支持COPY、LINK、UNLINK、PURGE。 集合（Collection）功能：Postman可以管理Http请求的集合，在做完单个测试时，可以将该请求存入特定集合内。这样在后继的重复测试，无需重新输入Http请求，就可以快速测试并获得结果。集合支持输入或导出，便于团队共享。 设置环境变量（Environment）：Postman可以管理环境变量。一般我们有可能有多种环境：development、staging或local，每种环境下的请求URL有可能各不相同。通过环境变量，在切换环境测试时无需重写Http请求。 参考 Postman插件安装地址
Github：postmanlabs
Postman官方博客
HTTP Link and Unlink Methods</description></item><item><title>cURL速查表</title><link>https://mryqu.github.io/post/curl%E9%80%9F%E6%9F%A5%E8%A1%A8/</link><pubDate>Thu, 30 Apr 2015 06:16:21 +0000</pubDate><guid>https://mryqu.github.io/post/curl%E9%80%9F%E6%9F%A5%E8%A1%A8/</guid><description>cURL是一个利用URL语法在命令行下工作的文件传输工具，1997年首次发行。它支持文件上传和下载，所以是综合传输工具，但按传统，习惯称cURL为下载工具。cURL还包含了用于程序开发的libcurl。 cURL支持的通訊协议有FTP、FTPS、HTTP、HTTPS、TFTP、SFTP、Gopher、SCP、Telnet、DICT、FILE、LDAP、LDAPS、IMAP、POP3、SMTP和RTSP。
参考 cURL Man Page curl cheat-sheet</description></item><item><title>Wget笔记</title><link>https://mryqu.github.io/post/wget%E7%AC%94%E8%AE%B0/</link><pubDate>Sun, 01 Dec 2013 08:35:14 +0000</pubDate><guid>https://mryqu.github.io/post/wget%E7%AC%94%E8%AE%B0/</guid><description>介绍 GNU Wget是一个命令行的下载工具，支持HTTP、HTTPS、FTP协议，支持断点续传。在宽带状态不佳的情况下，Wget能表现出很强的稳定性。
常用命令速查表 |操作|命令 |&amp;mdash;&amp;ndash; |下载文件|wget URL |恢复下载|wget -c URL |递归下载|以最大深度10级递归下载某链接：wget -r -l 10 URL |下载整个网站|wget -m URL-m等同于-r -N -l inf &amp;ndash;no-remove-listing |下载某个页面特定类型文件|仅下载pdf和mp3文件：wget -A &amp;ldquo;.pdf,.mp3&amp;rdquo; -r -l 1 -nd –np URL |下载某个页面特定类型之外的其他文件|下载pdf以外的文件：wget -R.pdf -r -l 1 -nd –np URL |忽略 robots.txt|wget -e robots=off URL |限制下载速率|wget –-limit-rate=20 URL |模拟firefox下载|wget -U Mozilla URL |不下载仅检查链接是否存在|wget &amp;ndash;spider &amp;ndash;force-html -i bookmarks.html |将输出写入文件|wget -O filepath URL |下载FTP文件|wget &amp;ndash;ftp-­use­r=yqu&amp;ndash;ftp-­pas­swo­rd=yqu URL |下载多个连接|wget URL1 URL2 URL3 |配置接收数据的限额大小|对单文件下载无效，对递归下载或从输入文件获取连接下载有效wget -Q2m -i URL当下载量超过限额后下载中断</description></item><item><title>host笔记</title><link>https://mryqu.github.io/post/host%E7%AC%94%E8%AE%B0/</link><pubDate>Sat, 19 Oct 2013 23:45:53 +0000</pubDate><guid>https://mryqu.github.io/post/host%E7%AC%94%E8%AE%B0/</guid><description>host命令是常用的分析域名查询工具，可以用来测试域名系统工作是否正常。
host参数 host使用</description></item><item><title>dig笔记</title><link>https://mryqu.github.io/post/dig%E7%AC%94%E8%AE%B0/</link><pubDate>Sat, 12 Oct 2013 19:51:58 +0000</pubDate><guid>https://mryqu.github.io/post/dig%E7%AC%94%E8%AE%B0/</guid><description>dig是域信息搜索器（domain informationgroper）。dig和nslookup作用有些类似，都是DNS查询工具。它与nslookup的区别在于：dig使用操作系统的解析库而nslookup使用自己的一套。Bind开发组已经宣布废弃nslookup，但Unix和Linux系统一般都安装了这两个工具。一些专业的DNS管理员在追查DNS问题时，都乐于使用dig命令，是看中了dig设置灵活、输出清晰、功能强大的特点。
如果Ubuntu下没有dig命令，可通过如下命令安装：
sudo apt-get install dnsutils dig使用说明 dig选项 dig提供查询选项，它影响搜索方式和结果显示。一些在查询请求报头设置或复位标志位，一部分决定显示哪些回复信息，其它的确定超时和重试战略。每个查询选项被带前缀（+）的关键字标识。一些关键字设置或复位一个选项。通常前缀是求反关键字含义的字符串no。其他关键字分配各选项的值，比如超时时间间隔。它们的格式形如+keyword=value。查询选项是：
全局查询参数（global-d-opt）和（在主机名之前的）服务器影响所有查询。局部查询参数和（在主机名之后的）服务器仅影响当前查询。
dig使用 mryqu&amp;gt; dig ; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.6.-ESV-R3 &amp;lt;&amp;lt;&amp;gt;&amp;gt; ;; global options: +cmd ;; Got answer: ;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 13319 ;; flags: qr rd ra; QUERY: 1, ANSWER: 13, AUTHORITY: 0, ADDITIONAL: 13 ;; QUESTION SECTION: ;. IN NS ;; ANSWER SECTION: . 391557 IN NS l.root-servers.net. . 391557 IN NS i.root-servers.net. . 391557 IN NS f.</description></item><item><title>nslookup笔记</title><link>https://mryqu.github.io/post/nslookup%E7%AC%94%E8%AE%B0/</link><pubDate>Fri, 28 Jun 2013 10:02:55 +0000</pubDate><guid>https://mryqu.github.io/post/nslookup%E7%AC%94%E8%AE%B0/</guid><description>nslookup命令是用来查询因特网域名服务器的。该命令在Unix、Linux和Windows平台都有提供。如果在Linux平台上找不到nslookup命令，检查是否安装bind-utils。
nslookup的使用模式 nslookup有两种模式：交互式和非交互式。
交互式模式允许向域名服务器查询各种主机、域名或打印域内主机列表。 非交互式模式用于查询一个主机或域的信息。 C:\&amp;gt;nslookup /? Usage: nslookup [-opt ...] # interactive mode using default server nslookup [-opt ...] - server # interactive mode using &amp;#39;server&amp;#39; nslookup [-opt ...] host # just look up &amp;#39;host&amp;#39; using default server nslookup [-opt ...] host server # just look up &amp;#39;host&amp;#39; using &amp;#39;server&amp;#39; 制定了查询对象就进入非交互式模式，否则进入交互模式。示例如下： 这两次查询百度的命令区别在于：第一次使用了默认DNS，第二次指定了Google的DNS。返回结果是非权威答案，即从上连DNS服务器的本地缓存中读取出的值，而非实际去查询到的值。
nslookup选项 set all：列出nslookup工具的常用选项的当前设置值。 set class=[value]：可以更改查询类 IN：Internet类（默认） CH：Chaos类 HS：Hesiod类 ANY：通配 Chaos和Hesiod现在几乎无人使用。 set [no]debug：可以用来设置是否进入调试模式。如果setdebug，则会进入到调试模式，查询过程中会显示完整的响应包以及其中的交互包。 set[no]d2：开启了高级调试模式，会输出很多nslookup内部工作的信息，包括了许多函数调用信息。 set domain=[name]：用于设置默认的域。 set [no]search：使用域搜索列表。 setport=[value]：众所周知，DNS默认的服务端口是53。当某些特殊情况，此端口改变时，可以通过本命令来设置。 set type=[value]：也可以写成setquerytype=[value]，用于更改信息查询类型。默认情况下，nslookup是查询域名所对应的A记录，而如果你想查询其对应的MX记录等信息时，就需要专门设置type值了。目前常用的type值如下： A：查看主机的IPv4地址 AAAA：查看主机的IPv6地址 ANY：查看关于主机域的所有信息 CNAME：查找与别名对应的正式名字 ISDN：域名对应的ISDN号码 HINFO：查找主机的CPU与操作系统类型 MB：存放指定邮箱的服务器 MG：邮件组记录 MINFO：查找邮箱信息 MR：改名的邮箱记录 MX：查找邮件交换信息 NS：查找主机域的域名服务器 PTR：查找与给定IP地址匹配的主机名 RP：查找域负责人记录 RT：路由穿透记录 SOA：查找域内的SOA地址 SRV：TCP服务器信息记录 TXT：域名对应的文本信息 UINFO：查找用户信息 X25：域名对应的X.</description></item></channel></rss>