<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloud on Mryqu's Notes</title><link>https://mryqu.github.io/categories/cloud/</link><description>Recent content in Cloud on Mryqu's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 13 Jun 2019 06:12:34 +0000</lastBuildDate><atom:link href="https://mryqu.github.io/categories/cloud/index.xml" rel="self" type="application/rss+xml"/><item><title>学习使用Minikube</title><link>https://mryqu.github.io/post/%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8minikube/</link><pubDate>Thu, 13 Jun 2019 06:12:34 +0000</pubDate><guid>https://mryqu.github.io/post/%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8minikube/</guid><description>在管理容器化应用方面，Kubernetes是目前最好的工具之一。而Minikube能够在macOS、Linux和Windows平台上实现一个本地Kubernetes集群，用于Kubernetes的学习。
Minikube是由Go语言实现，当前支持如下Kubernetes特性：
DNS NodePort ConfigMap和Secret 仪表盘 容器运行时: Docker、rkt、CRI-O和containerd 使能容器网络接口 Ingres 由上图可知，要使用Minikube，需要安装Minikube、kubectl和虚拟机。好在有Katacoda提供浏览器内的带有Kubernetes环境的免费虚拟终端，省却了安装这一步骤。
按照Kubernetes的Hello Minikube教程走了一遍。
minikube version; minikube start $ $ minikube version; minikube start minikube version: v0.28.2 Starting local Kubernetes v1.10.0 cluster... Starting VM... Getting VM IP address... Moving files into cluster... Setting up certs... Connecting to cluster... Setting up kubeconfig... Starting cluster components... Kubectl is now configured to use the cluster. Loading cached images from config file. $ $ minikube --help Minikube is a CLI tool that provisions and manages single-node Kubernetes clusters optimized for development workflows.</description></item><item><title>[AWS] 安装AWSCLI</title><link>https://mryqu.github.io/post/aws_%E5%AE%89%E8%A3%85awscli/</link><pubDate>Mon, 02 Jul 2018 05:40:10 +0000</pubDate><guid>https://mryqu.github.io/post/aws_%E5%AE%89%E8%A3%85awscli/</guid><description>想玩玩AWS CLI，就从https://aws.amazon.com/cli/装了一个，但是一执行就是出LookupError: unknown encoding: cp65001错误，查了一下据说是Python2.7导致的。 首先去https://www.python.org/下载了最新的Python3.7.0。然后重新安装AWS CLI，依旧出错，只好卸载。 查看是否安装pip，结果发现没有。根据https://packaging.python.org/tutorials/installing-packages/中的提示下载了get-pip.py，执行python get-pip.py，成功安装好pip。
C:\&amp;gt;pip --version pip 10.0.1 from c:\users\mryqu\appdata\local\programs\python\python37-32\lib\site-packages\pip (python 3.7 最后使用pip安装AWS CLI:
C:\&amp;gt;pip install awscli Collecting awscli Downloading https://files.pythonhosted.org/packages/1b/1b/7446d52820533164965f7e7d08cee70b170c78fbbcbd0c7a11ccb9187be6/awscli-1.15.49-py2.py3-none-any.whl (1.3MB) 100% |████████████████████████████████| 1.3MB 6.6MB/s Collecting docutils&amp;gt;=0.10 (from awscli) Downloading https://files.pythonhosted.org/packages/36/fa/08e9e6e0e3cbd1d362c3bbee8d01d0aedb2155c4ac112b19ef3cae8eed8d/docutils-0.14-py3-none-any.whl (543kB) 100% |████████████████████████████████| 552kB 3.3MB/s Collecting s3transfer&amp;lt;0.2.0,&amp;gt;=0.1.12 (from awscli) Downloading https://files.pythonhosted.org/packages/d7/14/2a0004d487464d120c9fb85313a75cd3d71a7506955be458eebfe19a6b1d/s3transfer-0.1.13-py2.py3-none-any.whl (59kB 100% |████████████████████████████████| 61kB 787kB/s Collecting botocore==1.10.48 (from awscli) Downloading https://files.pythonhosted.org/packages/0b/56/44067a8f0cae5f33007e7cbdbaac67cbd9fa598c733ad25eb8f252288fe9/botocore-1.10.48-py2.py3-none-any.whl (4.4MB 100% |████████████████████████████████| 4.4MB 6.6MB/s Collecting PyYAML&amp;lt;=3.12,&amp;gt;=3.10 (from awscli) Downloading https://files.pythonhosted.org/packages/4a/85/db5a2df477072b2902b0eb892feb37d88ac635d36245a72a6a69b23b383a/PyYAML-3.12.tar.gz (253kB) 100% |████████████████████████████████| 256kB 6.</description></item><item><title>[AWS] 学习AWS上SAS联合账户的使用</title><link>https://mryqu.github.io/post/aws_%E5%AD%A6%E4%B9%A0aws%E4%B8%8Asas%E8%81%94%E5%90%88%E8%B4%A6%E6%88%B7%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Wed, 18 Apr 2018 06:11:04 +0000</pubDate><guid>https://mryqu.github.io/post/aws_%E5%AD%A6%E4%B9%A0aws%E4%B8%8Asas%E8%81%94%E5%90%88%E8%B4%A6%E6%88%B7%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>今天顺利学完《SAS Federated Accounts on Amazon Web Services》课程，测验全都答/蒙对了。
创建了EC2实例。
第一次用MobaXterm。相对Putty，省了将.pem SSH密钥通过PuTTYgen工具转换成.ppk格式这一步操作。 在/etc/resolv.conf文件中增加了几个nameserver以指定单位的DNS，在search项增加了多个域名以解析单位的机器名。 安装libXext.x86_64、libXp.x86_64、libXtst.x86_64、xorg-x11-xauth.x86_64、xorg-x11-apps等包以支持图形显示。</description></item></channel></rss>